"Workload Automation - DataStage Jobs | Orb Data	HomeWhat we doConsultancyAutomate your IT with AnsibleNetcool to Service Now IntegrationIBM Software License ServiceITSM ConsultancyBYOD – Bring Your Own DeviceManaged servicesOpsAlertsRemote SupportPMaaS – Patch Management as a ServiceMobile Device Management as a ServiceIBM Cloud PrivateIBM Tivoli Application Dependency Discovery Manager (TADDM)Software Audit Compliance ServiceSecurity PracticeCloud solutionsMobile Device Management for MSPsIBM Cloud PrivateOpsAlertsSoftware Audit Compliance ServiceSoftware productsIBM Watson AIOpsIBM MaaS360 with WatsonIBM Workload Scheduler (IWS)IBM Tivoli Application Dependency Discovery Manager (TADDM)NetcoolIBM Netcool Operations InsightIBM® Operations Analytics Predictive InsightsIBM Operations Analytics – Log AnalysisBigFixHCL BigFix for Core ProtectionHCL BigFix LifecycleNagiosIBM Application Performance ManagementCase studiesAbout usEventsBlogKnowledge baseContact usHomeWhat we doConsultancyITSM ConsultancyBYOD – Bring Your Own DeviceNetcool to Service Now IntegrationIBM Software License ServiceManaged servicesOpsAlertsRemote SupportPMaaS – Patch Management as a ServiceMobile Device Management for MSPsIBM Cloud PrivateIBM Tivoli Application Dependency Discovery Manager (TADDM)Software Audit Compliance ServiceSecurityCloud solutionsOpsAlertsPMaaS – Patch Management as a ServiceSoftware Audit Compliance ServiceMobile Device Management as a ServiceIBM Cloud PrivateSoftware productsStorage SolutionsTesting ManagementDevelopment and Release ManagementIBM Workload Scheduler (IWS)IBM® Operations Analytics Predictive InsightsIBM Netcool Operations InsightApplication and Infrastructure MonitoringIBM Tivoli Application Dependency Discovery Manager (TADDM)Case studiesAbout usEventsBlogKnowledge baseContact usWorkload Automation – DataStage Jobs	By Pete Meechan on November 15th, 2017 in Workload Automation, Workload AutomationDefine Common Variable TableAssumptions – all DataStage jobs execute through the same pool or agent workstation.Define a variable table to hold parameters common to all DataStage jobs and ADD the variable table to the pool/workstation definition. Do this by editing the workstation definition and supplying a variable tale value. This will need a JnextPlan to execute to take effect!If you are not using a dedicated workstation for DataStage jobs, define the variables below in the default variable table (usually MAIN_TABLE) insteadNote The settings below are only examples- you must set the variables required for your specific environmentDefine Job Specific Variable TableNext define variable tables for each job and/or job stream that requires parameters that are ether in addition to the common parameters defined above or are different to those specified above i.e. if you need to override the settings specified in the common parametersSome examples are shown below for two different jobsDefine Job TemplateNow create a “template” job definition similar to the one shown belowSchedule for a single DataStage job per job stream/scheduleCreate a schedule that uses the “template” job definition – the schedule is a standard schedule with the job definition as shown below.Note that the job definition is the “template” job, but the Name is specified as job1 – this allows the same job definition to be reused and executed with a different job name in TWSSchedule for multiple DataStage jobs per job stream/scheduleCreate a schedule that uses the “template” job definition – the schedule is a standard schedule with the job definition for each job included..In this case the common parameters are held in the variable table at the workstation and you will need to specify any job specific parameters in the job definition itself.Therefore, you will need to create separate job definitions for each job rather than using a “template” job definition mentioned aboveExtracted TWS object definitions for the samples aboveVariable tablesVARTABLE ORB_DATASTAGE_COMMON_PARAMETERSDESCRIPTION “Datastage common parameters”MEMBERSDS_CUSTEMAIL “orb@scotchwhisky.local”DS_CYCLEDATE “2013-01-01”DS_CYCLETYPE “N”DS_DATASET “/orbdata/dataset”DS_DOMAIN “ORB_DS_DOMAIN”DS_DWCONNECTPARMS “DwDevConnectParms”DS_ENV “/app/dev”DS_INBOX “/orbdata/inbox”DS_JOB “Not_Specified”DS_PARAMETER_FILE “/opt/IBM/InformationServer/Server/DSEngine/bin/DataStageJobExecutor.properties”DS_PWD “/DATLDSIS02/dsdev”DS_REJECT “/orbdata/reject”DS_SERVER “dev.datastageserver.scotchwhisky.local”DS_SOURCE “OrbData”DS_STAGING “/orbdata/staging”DS_TRIGGER “/orbdata/trigger”DS_TRIGGEROUT “OrbData_Trigger_Stage_compl”DS_TRUNCCONNECTPARNS “DwDevTruncConnectParms”DS_USER “Not_Specified”DS_WARNEMAIL “orb@scotchwhisky.local”ENDVARTABLE ORB_DATASTAGE_JOB1DESCRIPTION “DS parameters specific to job 1”MEMBERSDS_CYCLEDATE “2017-01-01”DS_JOB “Build_Mart_OU”DS_USER “orbdata1”ENDVARTABLE ORB_DATASTAGE_JOB2DESCRIPTION “DS parameters specific to job2”MEMBERSDS_CYCLEDATE “2017-08-31”DS_DATASET “/test/dataset”DS_DOMAIN “ORB_TESTDS_DOMAIN”DS_ENV “/app/test”DS_INBOX “/test/inbox”DS_JOB “MasterJobSeqLoadEmployeeM_S”DS_PARAMETER_FILE “/opt/IBM/InformationServer/Server/DSEngine/bin/TestDataStageJobExecutor.properties”DS_PATH “/opt/IBM/InformationServer/Server/DSEngine/bin”DS_REJECT “/test/reject”DS_SERVER “test.datastageserver.scotchwhisky.local”DS_STAGING “/test/staging”DS_TRIGGER “/test/trigger”DS_USER “orbdata2”ENDJobs$JOBSCLYNELISH_AGT#ORB_DATASTAGE_JOB_TEMPLATETASK<?xml version=”1.0″ encoding=”UTF-8″?><jsdl:jobDefinition xmlns:XMLSchema=”http://www.w3.org/2001/XMLSchema”; xmlns:jsdl=”http://www.ibm.com/xmlns/prod/scheduling/1.0/jsdl”; xmlns:jsdldatastage=”http://www.ibm.com/xmlns/prod/scheduling/1.0/jsdldatastage”; XMLSchema:text=”resolveVariableTable” name=”DATASTAGE”><jsdl:application name=”datastage”><jsdldatastage:datastage><jsdldatastage:DataStageParameters><jsdldatastage:DataStagePanel><jsdldatastage:Logon><jsdldatastage:Domain>^DS_DOMAIN^</jsdldatastage:Domain><jsdldatastage:Server>^DS_SERVER^</jsdldatastage:Server><jsdldatastage:UserName>${agent:orbdata.DSuser.username}</jsdldatastage:UserName><jsdldatastage:password>${agent:orbdata.DSuser.userpwd}</jsdldatastage:password></jsdldatastage:Logon><jsdldatastage:JobDefinitionGroup><jsdldatastage:ProjectNameGroup><jsdldatastage:ProjectName>^DS_PROJECT^</jsdldatastage:ProjectName></jsdldatastage:ProjectNameGroup><jsdldatastage:JobNameButtonGroup><jsdldatastage:JobNameRadioButton><jsdldatastage:JobName>^DS_JOB^</jsdldatastage:JobName></jsdldatastage:JobNameRadioButton></jsdldatastage:JobNameButtonGroup><jsdldatastage:FileRemotePath>^DS_PARAMETER_FILE^</jsdldatastage:FileRemotePath><jsdldatastage:ParameterTableValues><jsdldatastage:ParameterTableValue key=”Source”>^DS_SOURCE^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”TriggerOut”>^DS_TRIGGEROUT^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”WarnEmail”>^DS_WARNEMAIL^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”TruncConnectParms”>^DS_TRUNCCONNECTPARMS^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”DWConnectParms”>^DS_DWCONNECTPARMS^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”$PWD”>^DS_PWD^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”$ENV”>^DS_ENV^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”$INBOX”>^DS_INBOX^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”$STAGING”>^DS_STAGING^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”$TRIGGER”>^DS_TRIGGER^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”$REJECT”>^DS_REJECT^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”$DATASET”>^DS_DATASET^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”CustEmail”>^DS_CUSTEMAIL^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”CycleDate”>^DS_CYCLEDATE^</jsdldatastage:ParameterTableValue><jsdldatastage:ParameterTableValue key=”CycleType”>^DS_CYCLETYPE^</jsdldatastage:ParameterTableValue></jsdldatastage:ParameterTableValues></jsdldatastage:JobDefinitionGroup><jsdldatastage:JobExecutionGroup><jsdldatastage:ForceReset/></jsdldatastage:JobExecutionGroup></jsdldatastage:DataStagePanel><jsdldatastage:OptionsPanel><jsdldatastage:JobOptionsGroup><jsdldatastage:WarningLimitButtonGroup><jsdldatastage:NoWarningLimitButton/></jsdldatastage:WarningLimitButtonGroup><jsdldatastage:RowLimitButtonGroup><jsdldatastage:NoRowLimitButton/></jsdldatastage:RowLimitButtonGroup><jsdldatastage:OperationalMetadataGroup><jsdldatastage:UseDefault/></jsdldatastage:OperationalMetadataGroup></jsdldatastage:JobOptionsGroup></jsdldatastage:OptionsPanel></jsdldatastage:DataStageParameters></jsdldatastage:datastage></jsdl:application></jsdl:jobDefinition>DESCRIPTION “Test DataStage job definition 1”RECOVERY STOPJob stream/scheduleSCHEDULE CLYNELISH_AGT#ORB_DATASTAGE1DESCRIPTION “Orb Data Stage job stream 1”VARTABLE ORB_DATASTAGE_JOB1ON RUNCYCLE WORKDAYS “FREQ=DAILY;INTERVAL=1;BYWORKDAY”( AT 0600 JSUNTIL 0800 )MATCHING PREVIOUSFOLLOWS CLYNELISH_AGT#ORB_DATASTAGE1.@:CLYNELISH_AGT#ORB_DATASTAGE_JOB_TEMPLATE AS ORB_DATASTAGE_JOB1ENDSCHEDULE CLYNELISH_AGT#ORB_DATASTAGE2DESCRIPTION “Orb Data Stage job stream 2”VARTABLE ORB_DATASTAGE_JOB2ON RUNCYCLE WORKDAYS “FREQ=DAILY;INTERVAL=1;BYWORKDAY”( AT 0600 JSUNTIL 0800 )MATCHING PREVIOUSFOLLOWS CLYNELISH_AGT#ORB_DATASTAGE1.@FOLLOWS CLYNELISH_AGT#ORB_DATASTAGE2.@:CLYNELISH_AGT#ORB_DATASTAGE_JOB_TEMPLATE AS ORB_DATASTAGE_JOB2ENDHits: 4Author:Pete MeechanWorkload Automation – Part 4: Pull FilesDanshari – The age of minimalist monitoringRecent PostsThe Best Practices for Patching IBM softwareExecutive Dashboards with Netcool’s Map WidgetEvolving the use of Remote Resource after Covid-19Support for CentOS has been discontinued. What’s next for its users?Setting up a DB2 Backup PlanArchivesArchives Select Month January 2021 (4) October 2020 (1) June 2020 (1) February 2020 (2) November 2018 (4) June 2018 (2) May 2018 (2) March 2018 (1) November 2017 (5) September 2017 (1) August 2017 (1) May 2017 (1) April 2017 (1) March 2017 (1) February 2017 (2) January 2017 (1) December 2016 (1) November 2016 (1) August 2016 (2) May 2016 (4) April 2016 (1) March 2016 (1) February 2016 (1) August 2015 (1) July 2015 (1) June 2015 (3) April 2015 (1) February 2015 (2) October 2014 (1) August 2014 (1) July 2014 (1) June 2014 (1) May 2014 (3) April 2014 (1) February 2014 (1) January 2014 (1) November 2013 (2) October 2013 (1) September 2013 (2) August 2013 (1) July 2013 (5) June 2013 (6) May 2013 (2) April 2013 (4) March 2013 (2) February 2013 (8) January 2013 (1) November 2012 (2) July 2012 (1) June 2012 (1) March 2012 (1) January 2012 (1) December 2011 (1) September 2011 (1) August 2011 (1) July 2011 (1) June 2011 (2) May 2011 (3) March 2011 (3) February 2011 (2) January 2011 (1)CategoriesCategories Select Category Advanced Event Management AIOps AIX Security Compliance Audit Application Performance Management Best Practices BigFix Careers Cloud AWS Data Centre Management DB2 Docker Impact IT Service Management ITIL ITM ITNM MaaS360 Migration Mobile Device Management Monitoring Tools Nagios Netcool Operating Systems CentOS Opinion Patching Project Management Remote Support ROI Security Service Desk TADDM Technical Workload Automation Workload Automation ZabbixGET TO KNOW USHomeAbout usEventsBlogKnowledge baseContact usOUR EXPERTISEApplication and Infrastructure MonitoringApplication development and testing toolsArtificial intelligence and machine learningIBM Workload Scheduler (IWS)IBM Tivoli Application Dependency Discovery Manager (TADDM)Storage SolutionsWHAT WE DOConsultancyManaged servicesCloud solutionsSoftware productsLet us help you	Call: +44 (0) 203 962 4463	Email: info@orb-data.com	Address: Fulham Uncommon, 126 New Kings Road, Fulham, London, SW6 4LZFind on Google MapsCopyright © 2021 Orb Data Limited. All Rights Reserved | Privacy Policy | Cookies"

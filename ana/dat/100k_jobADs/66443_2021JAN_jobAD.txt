"Legacy Item Recommender JobsToggle navigationDocumentationHow ToProductsFusion ServerFusion AIFusion ConnectorsPredictive MerchandiserApp StudioManaged SearchLucidworks CloudLegacy ProductsLearn MoreLucidworksKnowledge BaseBlogWebinarsEbooksTrainingSupportFusion AI 4.1Fusion AI 5.3Fusion AI 5.2Fusion AI 5.1Fusion AI 5.0Fusion AI 4.2Fusion AI 4.1Fusion AI 4.0ArchitectureQuery Rewriting ArchitectureConceptsBoostingBoost with SignalsGetting Started with Recommendations and BoostingItems-for-Item RecommendationsItems-for-Query RecommendationsItems-for-User RecommendationsQueries-for-Query RecommendationsMethods for Recommendations and BoostingUsers-for-Item RecommendationsExperimentsInsightsAnalyticsApp Insights DashboardsEventsExperiment ResultsSessionsMachine LearningMachine Learning Models in FusionMachine Learning JobsSignals and AggregationsAggregationsAggregator FunctionsLegacy AggregationsSQL AggregationsSignalsSignals Data FlowDefault Signals Index PipelineDeleting Old SignalsSignals Types and StructuresParallel Bulk Loader (PBL) OverviewHow-toReferenceAggregationsAggregation Configuration ParametersAggregation PropertiesAggregator Functions ExamplesBuilt-in Aggregation JobsAPIExperiments APIQuery Rewrite APIRecommendations APISignals APIBoostingItems-for-Item Recommendations ConfigurationItems-for-User Recommendations ConfigurationExperimentsExperiment MetricsIndex Pipeline StagesMachine Learning Index StageOpenNLP NER Extraction Index StageFormat Signals Index StageTensorflow Deep Encoding Index StageUpdate Experiment StageInsightsInsights Reports and Signal Data RequirementsJobsALS Recommender JobsBisecting KMeans Clustering JobsCluster Labeling JobsCollection Analysis JobsDocument Clustering JobsGround Truth JobsHead/Tail Analysis JobsLegacy Item Recommender JobsLegacy Item Similarity JobsLevenshtein Spell Checking JobsLogistic Regression Classifier Training JobsOutlier Detection JobsParallel Bulk LoaderParameterized SQL Aggregation JobsPhrase Extraction JobsQuery-to-Query Similarity JobRandom Forest Classifier Training JobsRanking Metrics JobsSQL-Based Experiment Metric JobsSynonym and Similar Queries Detection JobsToken and Phrase Spell Correction JobWord2Vec Model Training JobsQuery Pipeline StagesParameterized Boosting StageAnalytics Catalog StageBoost Documents StageCompute Mathematical ExpressionEscape QueryExperiment StageFilter Stop Words Query StageLearning to Rank StageMachine Learning StageQuery-Document Vectors Distance Query StageApply Rules StageRecommend Items for Item StageRecommend Items for User StageBoost with Signals StageResponse Document Exclusion StageMachine Learning (Responses) StageResponse Pairwise Swap StageResponse Shuffle StageResult Document Field Sorting Query StageResponse Document Field Redaction StageRewrite Pagination Parameters for RerankingModify Response with Rules StageSolr MoreLikeThis StageTensorflow Deep Encoding Query StageText Tagger StageSmart AnswersSmart Answers Detailed Pipeline SetupLicensingRelease Notes5.3.2 Release Notes5.3.1 Release Notes5.3.0 Release Notes5.2.2 Release Notes5.2.1 Release Notes5.2.0 Release Notes5.1.5 Release Notes5.1.4 Release Notes5.1.3 Release Notes5.1.2 Release Notes5.1.1 Release Notes5.1.0 Release Notes5.0.2 Release Notes5.0.0 Release Notes4.2.6 Release Notes4.2.5 Release Notes4.2.2 Release Notes4.2.1 Release Notes4.2.0 Release Notes4.1.2 Release Notes4.1.1 Release Notes4.1.0 Release Notes4.0.2 Release Notes4.0.1 Release Notes4.0.0 Release NotesLegacy Item Recommender JobsConfiguration PropertiesCompute user recommendations based on a pre-computed item similarity model.Configuration PropertiesPropertyDescription, TypeidSpark Job IDrequiredThe ID for this Spark job. Used in the API to reference this job. Allowed characters: a-z, A-Z, dash (-) and underscore (_)type: stringmaxLength: 128pattern: ^[A-Za-z0-9_\\-]+$itemSimCollectionItem Similarity CollectionrequiredCollection containing item-to-item similarity values (computed by any means)type: stringitemSimQueryItem Similarity Collection Filter QuerySolr query to filter item similarities (e.g. to filter by similarity type, or algorithm id)type: stringdefault value: '*:*'numRecsPerUserNumber of Recommendations / UserLimit on the maximum number of recommendations to compute per usertype: integerdefault value: '10'outputRecsCollectionOutput Recommendations CollectionrequiredCollection containing item-to-item similarity-based recommendationstype: stringprefItemIdFieldPreference Collection Item Id FieldSolr field name containing stored item ids in the preference collectiontype: stringdefault value: 'item_id_s'prefUserIdFieldPreference Collection User Id FieldSolr field name containing stored user ids in the preference collectiontype: stringdefault value: 'user_id_s'prefWeightFieldPreference Collection Preference Weight FieldSolr field name containing preference weight in the preferences collectiontype: stringdefault value: 'weight_d'simItemIdFieldItem-Similarity Collection Item Id FieldSolr field name containing stored item ids in the item-similarity collectiontype: stringdefault value: 'item_id_s'simOtherItemIdFieldItem-Similarity Collection Other Item Id FieldSolr field name containing the ids for the *other* item similar to the main itemtype: stringdefault value: 'other_item_id_s'simSimFieldItem-Similarity Collection Similarity FieldSolr field name containing item-item similarity value in the item-similarity collectiontype: stringdefault value: 'sim_d'trainingCollectionPreference CollectionrequiredUser/Item preference collection (often a signals collection or signals aggregation collection)type: stringtrainingDataFilterQueryPreference Collection Filter QuerySolr query to filter user preferencestype: stringdefault value: '*:*'typeSpark Job Typerequiredtype: stringdefault value: 'item_similarity_recs'enum: { item_similarity_recs }Please turn off your adblocker to leave feedback.Was this page helpful?YesNoThank you! Your feedback helps improve Lucidworks documentation.Showing documentation results in for: “”<% if (results.length > 0) { %><%= result.title.replace(/<\\/?[^>]+(>|$)/g, \"\") %><%= result.title.replace(/<\\/?[^>]+(>|$)/g, \"\") %><%= result.excerpt.replace(/<\\/?[^>]+(>|$)/g, \"\") %>No documentation resultsNo Results©2021 Lucidworks, Inc. All rights reserved.CareersCustomersPartnersServicesRelevanceAuthorPublish Dateclass=\"active\" >class=\"active\" ><% } else if (currentPage >= 6 && numPages - currentPage >= 6) { %>class=\"active\" >class=\"active\" ><% if (currentPage >= 1 && currentPage !== numPages) { %>»Source()<% } else if (index > 4) { %>()More<% if (facets.project_label.length > 0) { %>Project()<% } else if (index > 4) { %>()More<% if (facets.author_facet.length > 0) { %>Author()<% } else if (index > 4) { %>()More"

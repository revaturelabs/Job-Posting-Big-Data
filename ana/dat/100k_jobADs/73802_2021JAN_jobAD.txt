"How to automatically back up WordPress or ownCloud using cron jobs – The Grey LiteratureSkip to contentThe Grey LiteratureI'm the research fairy, here to make your academic problems disappear!Menu and widgetsCurriculum vitaeORCIDGoogle ScholarScholar SocialClinical trials stopped by Covid-19Clinical trials viewerNumbat Systematic Review ManagerThe Queerbait-Tragicqueer-Straightcomfort TestRSS feedBloggin’ log-inSearchSearch for:Old postsOld posts Select Month December 2020 (1) October 2020 (1) September 2020 (1) August 2020 (1) June 2020 (1) May 2020 (1) April 2020 (1) February 2020 (2) October 2019 (3) September 2019 (2) August 2019 (2) July 2019 (2) June 2019 (2) May 2019 (1) April 2019 (3) September 2018 (1) August 2018 (1) June 2018 (1) December 2017 (1) June 2017 (1) April 2017 (1) February 2017 (1) November 2016 (2) October 2016 (1) September 2016 (2) June 2016 (1) April 2016 (1) February 2016 (1) November 2015 (1) October 2015 (4) September 2015 (2) July 2015 (1) June 2015 (1) May 2015 (1) February 2015 (1) January 2015 (5) October 2014 (2) September 2014 (3) August 2014 (1) July 2014 (1) March 2014 (2) February 2014 (1) January 2014 (3) December 2013 (1) September 2013 (1) June 2013 (2) May 2013 (3) April 2013 (3) March 2013 (5) February 2013 (2) January 2013 (1) November 2012 (2) October 2012 (1) September 2012 (1) August 2012 (2) May 2012 (1) April 2012 (3) March 2012 (1) February 2012 (2) January 2012 (2) December 2011 (4) November 2011 (6) October 2011 (5) September 2011 (4) August 2011 (4) July 2011 (2) June 2011 (8) May 2011 (14) April 2011 (15) March 2011 (18) February 2011 (17) January 2011 (8) December 2010 (7) November 2010 (4) October 2010 (7) September 2010 (5) August 2010 (8) July 2010 (8) June 2010 (2) May 2010 (1) April 2010 (7) March 2010 (5) February 2010 (5) January 2010 (2) December 2009 (17) November 2009 (4) October 2009 (1) September 2009 (17) August 2009 (22) July 2009 (6)How to automatically back up WordPress or ownCloud using cron jobsRecently I set up WordPress for my research group in the Medical Ethics Unit. We will be blogging our journal clubs, posting links to our publications and upcoming events. In related news, my research group has been using DropBox to coordinate papers in progress, sharing of raw data, citations, and all manner of other information. This was working pretty well, but we have been bumping up against the upper limit of our capacity on DropBox for a while, so I installed ownCloud on the web host we got for the research group blog. I’m pretty happy with how nice it is to use and administer.Of course one of our concerns is making sure that we don’t lose any data in the case of the failure of our web host. This is unlikely, but it does happen, and we don’t want to run into a situation where we try to log in to our cloud-based file storage / sharing service and find that months’ worth of research is gone forever.For a few weeks, the following was more-or-less my workflow for making backups:Log in to phpMyAdminMake a dump file of the WP database (choose database > Export > Save as file … )Make a dump file of the ownCloud databaseSave to computer and label with appropriate dateLog in to web server using FTPCopy contents of WP’s /wp-content/ to a date-labelled folder on my computerCopy contents of ownCloud’s /data/ to a date-labelled folder on my computerThis worked pretty well, except that it was a pain for me to have to do this every day, and I know that if I ever forgot to do it, that would be when something terrible happened. Fortunately for me, my boss mentioned that he had an old but still serviceable iMac sitting in his office that he wanted to put to some good purpose.I decided to make a fully automatic setup that would make backups of our remotely hosted data and save it locally without any input on my part, so I can just forget about it. I made it with cron jobs.Server side cron jobsFirst, I set up some cron jobs on the server side. The first one waits until midnight every day, then dumps all the MySQL databases into a gzipped file on my web host, then zips up the WordPress /wp-content/ and ownCloud /data/ folders and puts them in the backup folder as well. The second server-side cron job empties the backup folder every day at 23h00.0 0 * * * PREFIX=`date +%y-%m-%d`; mysqldump -u USERNAME -h HOSTNAME -pPASSWORD –all-databases | gzip > /path/to/backup/folder/${PREFIX}-DBNAME-db.sql.gz; zip -r /path/to/backup/folder/${PREFIX}-wordpress-files.zip /path/to/wordpress/wp-content/; zip -r /path/to/backup/folder/${PREFIX}-owncloud-files.zip /path/to/owncloud/data/;0 23 * * * rm -r /path/to/backup/folder/*A few notes for someone trying to copy this set-upYour web host might be in a different time zone, so you might need to keep that in mind when coordinating cron jobs on your web host with ones on a local machine.My web host provided a cron job editor that automatically escapes special characters like %, but you might have to add back-slashes to make yours work if you’re manually editing with crontab -e.You might want to put a .htaccess file in your backup directory with the following in it: “Options -Indexes” (remove the quotes of course). This stops other people from going to your backup directory in a browser and helping themselves to your files. You could also name your backup directory with a random hash of letters and numbers if you wanted to make it difficult for people to steal your backed-up data.Local cron jobThen on the local machine, the old iMac, I set up the following cron job. It downloads the files and saves them to a folder on an external hard disc every day at 6h00.0 6 * * * PREFIX=`date +%y-%m-%d`; curl http://www.your-web-site.com/back-up/${PREFIX}-DBNAME-db.sql.gz > /Volumes/External HD/Back-ups/${PREFIX}-DBNAME-db.sql.gz; curl http://www.your-web-site.com/back-up/${PREFIX}-wordpress-files.zip > /Volumes/External HD/Back-ups/${PREFIX}-wordpress-files.zip; curl http://www.your-web-site.com/back-up/${PREFIX}-owncloud-files.zip > /Volumes/External HD/Back-ups/${PREFIX}-owncloud-files.zip;If you were super-paranoid about losing data, you could install this on multiple local machines, or you change the timing so that the cron jobs run twice a day, or as often as you liked, really. As long as they’re always turned on, connected to the internet and they have access to the folder where the backups will go, they should work fine.Stoop-n-scoopThis isn’t a super-secure way to back up your files, but then we’re more worried about losing data accidentally than having it stolen maliciously. I don’t think the world of medical ethics is cut-throat enough that our academic rivals would stoop to stealing our data in an effort to scoop our papers before we can publish them. That said, I’m not about to give away the exact URL where our backups are stored, either.The practical upshot of all this is that now we have at least three copies of any file we’re working on. There’s one on the computer being used to edit the document, there’s one stored remotely on our web host, and there’s a copy of all our files backed up once a day on the old iMac at the Medical Ethics Unit.Published byThe Grey LiteratureThis is the personal blog of Benjamin Gregory Carlisle PhD. Queer; Academic; Queer academic. \"I'm the research fairy, here to make your academic problems disappear!\"	View all posts by The Grey Literature	Posted on 2013 May 20 2013 May 20 Author The Grey LiteratureTags Bioethics, McGill, Technology, The internet	One thought on “How to automatically back up WordPress or ownCloud using cron jobs”	Ann says:	2014 February 10 at 023Thanks for the article.For many users without PHP or Linux knowledge, using third party cron job service (like easycron.com) is a good alternative.Leave a Reply Cancel replyYour email address will not be published. Required fields are marked *CommentName *Email *WebsiteThis site uses Akismet to reduce spam. Learn how your comment data is processed.Post navigationPrevious Previous post: Solutions to some two-mover chess problems by W T Pierce and J PierceNext Next post: Reading Milton’s Paradise LostProudly powered by WordPress"

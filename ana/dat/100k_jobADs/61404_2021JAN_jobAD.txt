"ScoreStorybook | Job OffersAll companiesAll personsAll keywordsLooking for customers? Send your offerLooking for a worker? Place Your orderLooking for a job? View job offersHomeReportsNetworksMarketingOrdersJobsLeadsPricing×Irid Sign inESTHomeReportsNetworksMarketingOrdersJobsLeadsPricingSign outLeia usaldusväärsed tööandjad või andekad töötajadLooking for a jobAdvertise your skillsAdd an unlimited number of adsReceive inquiries and communicate with partnersTo promote your own servicePost your adLooking for employeesAdd an advertisement to find an employeeView and compare salary price requestsChoose the most suitable candidatesYou have a job that needs to be doneAdd a job offerIn addition to each job offer, also see the average salary paid, reputation score, and employee network by the prospective EmployerIga Töötaja juures töötasu hinnasoovid ja teenuste portfoolio`; return echarts.init(document.getElementById(id + '_')); }, tpls: {}, mytpl: (id, json, ret) => { /***/ const _tpl = (id, json, ret) => { if (!Array.isArray(json)) { json = [json]; } let obj = document.getElementById(id); if (!Utl.tpls[id]) { Utl.tpls[id] = obj.innerHTML; } json = json.map(e => { let tpl = Utl.tpls[id]; Object.keys(e).forEach(k => { tpl = tpl.replace(new RegExp(`___${k}___`, 'g'), e[k]); }); return tpl; }); if (ret) { return json.join(''); } obj.innerHTML = json.join(''); obj.style.display = ''; }; return _tpl(id, json, ret); }, restorCompact: a => a.vs.map(e => { /**/ const e2 = {}; a.ks.forEach((k, n) => e2[k] = e[n]); return e2; }), fDate: (d) => (new Date(d)).toLocaleDateString('et', { year: '2-digit', month: '2-digit', day: '2-digit', }), fprc: (e, nl, sp, u) => { /*Hind õigesse formaati*/ u = u || (u === '' ? '' : ' €'); nl = nl || '-'; sp = sp || ' '; e = parseInt(e); return e = e === 0 ? nl : (e.toLocaleString('et-ET') + u).replace(/ /g, sp); }, fprc2: p => p.toLocaleString('et-ET', { style: 'currency', currency: 'EUR' }), diagrColors: arr => { const pieces = arr => { arr = [{ 'gt': 0, 'lte': arr[0], 'color': 'green' }, { 'gt': arr[0], 'lte': arr[1], 'color': 'lgreen' }, { 'gt': arr[1], 'lte': arr[2], 'color': 'yellow' }, { 'gt': arr[2], 'lte': arr[3], 'color': 'orange' }, { 'gt': arr[3], 'lte': 1, 'color': 'red' } ]; arr.map(e => { e.color = Utl.computecolorstyle(e.color); }); return arr; }; return pieces(arr); }, e: (array, key, def) => { //a new function for getting json's element, e.g e(obj,['a','b','c'],'') returns json-s obj.a,b,c. //If the json's branch not found, then it returns def. const elem = (array, key, def) => { if (key && Array.isArray(key)) { if (key.length === 1) { key = key[0]; } else { let k = key.shift(); return elem(elem(array, k, []), key, def); } } return array[key] || def; } return elem(array, key, def || ''); }, loadEchartDiagram: (option, id, height) => { //echart options, id of div where the diagram is loaded, height diagram's box-height in rem's let chart; const loadDiagr = (option, id, rem) => { document.getElementById(id).innerHTML = ``; chart = echarts.init(document.getElementById(id + '_')); option = $.extend({}, { dataZoom: [ { type: 'inside', start: window.innerWidth < 475 ? 75 : window.innerWidth < 768 ? 50 : 0, end: 100, }, // { // type: 'slider', // show: true, // showDetail: false, // handleSize: 0, // fillerColor: 'rgba(0, 61, 143, .3)', // ssb dark blue // borderColor: 'rgba(0, 0, 0, 0)', // bottom: -10, // } ]}, option); chart.setOption(option, true); } loadDiagr(option, id, height || 30); window.addEventListener('resize', _ => { chart.resize(); }); }, bestMax: nr => { /*Diagrammide y-telgede jaoks parim ümardatud maksimaalse väärtuse arvutamiseks*/ let i = 1; let n = 0; let k = 1; while (true) { if (i.toString().slice(-1) === '0') { k *= 10; n = k; } else { n += k; } i++; if (n > nr) break; } return n < 40 ? 40 : n; }, repsScoreDiagr: data => { /*Maineskoori ekvalaiseri genereerimiseks*/ const total = data.reduce((t, e) => t + parseInt(e[1]), 0); const titles = data.map(e => e[0]); data = data.map(e => e[1]).map(function (e) { if (e === 'undefined') { return 0; } if (total <= -3000) { return -5; } else if (e >= 1000) { return 5; } else if (500 < e && e < 1000) { return 4; } else if (300 < e && e <= 500) { return 3; } else if (200 < e && e <= 300) { return 2; } else if (100 <= e && e <= 200) { return 1; } else if (50 <= e && e <= 99) { return -1; } else if (-50 <= e && e <= 49) { return -2; } else if (-200 <= e && e <= -51) { return -3; } else if (-400 <= e && e <= -201) { return -4; } else if (e <= -401) { return -5; } else { return 0; } }); data = data.map(e => [...Array(10).keys()].reverse().map(function (e2) { e2 = e2 - (e2 < 5 ? 5 : 4); let col = ''; if (e2 > 0 && e2 <= e || e2 < 0 && e2 >= e) { if (e === 4 || e === 5) return ``; else if (e === -4 || e === -5) return ``; else return ``; } else return ``; }).join('')); return { total: total, diagr: data.map((e, k) => `${e}`).join('') }; }, wtbl: (d, id, begin, fst) => { let len = -1; let sep1 = '-----'; //Üles-alla nooled if(fst && d.trendt && d.trendv) { for(var i1 = 0, is = Object.keys(d.tcontent); i1 < is.length; i1++) { let i2 = is[i1], v1 = d.tcontent[i2]; for(var j1 = 0, js = Object.keys(v1); j1 < js.length; j1++) { let j2 = js[j1], v2 = v1[j2]; /*kui konkreetsel real on oma trendinool*/ if(v2.trendv && ['negative','positive',''].includes(v2.trendv)) d.tcontent[i1][j2][0] = v2.trendv + sep1 + v2[0]; /*kui konkreetsel ridadeplokil on trendinooled*/ else if(v1.trendv && ['negative','positive',''].includes(v1.trendv)) d.tcontent[i1][j2][0] = v1.trendv + sep1 + v2[0]; /*Kui kogu tabelil on..*/ else if(d.trendv && ['negative','positive',''].includes(d.trendv)) d.tcontent[i1][j2][0] = d.trendv + sep1 + v2[0]; } } for(var i1 = 0, is = Object.keys(d.tcontent); i1 < is.length; i1++) { let i2 = is[i1], v1 = d.tcontent[i2]; for(var j1 = 0, js = Object.keys(v1); j1 < js.length; j1++) { let j2 = js[j1], v2 = v1[j2]; delete d.tcontent[i2][j2].trendv; } delete d.tcontent[i2].trendv; } for(var i1 = 0, is = Object.keys(d.tcontent); i1 < is.length; i1++) { let i2 = is[i1], v1 = d.tcontent[i2]; v1_ = []; for(var j1 = 0, js = Object.keys(v1); j1 < js.length; j1++) { let j2 = js[j1], v2 = v1[j2]; let v2_ = []; for(var k1 = 0, ks = Object.keys(v2); k1 < ks.length; k1++) { v2_.push(v2[ks[k1]]); } v1_.push(v2_); } d.tcontent[i2] = v1_; } d.trends = []; d.tcontent = d.tcontent.map((t,ti) => t.map((r,ri) => { let trend = ''; if (r[0].startsWith(sep1)) { r[0] = r[0].substr(5); } else { let r0a = r[0].split(sep1); if (r0a.length > 1 && ['negative', 'positive'].includes(r0a[0]) ) { trend = r0a[0]; r[0] = r0a[1]; } } if(!d.trends[ti]) d.trends[ti] = []; d.trends[ti][ri] = trend; return r; })); } /*Väärtuste formaadid paika*/ if (fst) { d.titles = [d.firstTitle].concat(d.titles); } /*Tabeli rea lahtrite arv*/ d.tcontent.map(t => t.map(r => len = len === -1 ? r.length - 1 : len)); let len2 = d.columnShown || 4; begin = begin || 0; begin = begin < 0 ? 0 : begin; begin = begin + len2 >= len ? len - len2 : begin; let end = begin + len2; /*Genereeritavad veerud*/ let tbls = d.tcontent.map(t => t.map(r => r.filter((r, i) => i === 0 || begin <= i - 1 && i - 1 < end))); /*Vajdausel iga alamtabeli lõppu tühi rida*/ d.emptyrows ? tbls.map((t, i) => i < tbls.length - 1 ? t.push([...Array(len2 + 1).keys()].map(r => ' ')) : null) : null; var activeIndexes = []; let a = [...Array(len).keys()].map(i => { let b = begin <= i && i < end; return b ? 2 : 0; }); /*Siin m22rame navigeerimise mummude arvu piirangu - 12tk*/ nn = 12; while(nn > 0) { if(a.filter(i => i > 0).length <= 12) { for(var i = 0, n = a.length; i < n; i++) { if(i > 0 && a[i] === 0 && a[i - 1] > 0) { a[i] = 1; break; } } } if(a.filter(i => i > 0).length <= 12) { for(var i = 0, n = a.length; i < n; i++) { if(i < n - 1 && a[i] === 0 && a[i + 1] > 0) { a[i] = 1; break; } } } nn--; } let inds = a.map((n, i) => { let b = begin <= i && i < end; if(b) activeIndexes[activeIndexes.length] = i; let dn = n === 0 ? 'display:none' : ''; let bg = b ? 'var(--ssb-dark-blue)' : '#e1e0e0'; let t = b ? '' : `title=\"${d.titles[i+1]}\"`; let id1 = `id=\"${id}_navi_nr_${i}\"`; return ``; }).join(''); let titles = d.titles.filter((r, i) => i === 0 || begin <= i - 1 && i - 1 < end); const getTrend = (r,ti,ri) => { let trend = ''; if(!d.trends) return ''; if(d.trends[ti] && r.length > 2 && typeof d.trends[ti][ri] === 'string') { let [a,b] = [r[r.length - 2],r[r.length - 1]].map(n => parseFloat((n||'0').toString().replace(/ /g, '').replace(/ /g, '').replace(/,/g, '.'))); if (d.trends[ti][ri] === 'positive') { trend = a < b ? 'gu' : (a > b ? 'yd' : ''); } else if (d.trends[ti][ri] === 'negative') { trend = a < b ? 'yu' : (a > b ? 'gd' : ''); } trend = trend === '' ? '' : ``; } return ` ${trend} `; }; const fNr = c => { if(isNaN(c)) return c; else if(c === 0) return '-'; else return c.toLocaleString(\"et-ET\", { style: \"currency\", currency: \"EUR\", minimumFractionDigits: 0, maximumFractionDigits: 0}).replace(/\\s+/g, ' '); }; let res = `${d.hdrleft || ''}${inds}${d.rightLabel ? `` : ''}${d.hideTbl ? '' : `${titles.map(c => ` ${c} `).join('')}${d.trends ? ` ${d.trendt || 'Trend'} ` : ''}${tbls.map((t,ti) => t.map((r,ri) => `${r.map(c => ` ${fNr(c)} `).join('')}${getTrend(r,ti,ri)}\\n`).join('')).join('')}${d.watermark ? `` : ''} `} `; $('#' + id).html(res); loadToolTipster($, `div[id^=\"${id}_navi_nr_\"]`); if(d.fn) d.fn({activeIndexes: activeIndexes}); let left = $(`#${id}_navi .myleftangle`); left.on('click', function () { Utl.wtbl(d, id, begin - 1, false); }); begin <= 0 ? left.addClass('ssb-table-nav__btn--disabled') : left.removeClass('ssb-table-nav__btn--disabled'); let right = $(`#${id}_navi .myrightangle`); right.on('click', function () { Utl.wtbl(d, id, begin + 1, false); }); begin + len2 >= len ? right.addClass('ssb-table-nav__btn--disabled') : right.removeClass('ssb-table-nav__btn--disabled'); $(`div.nav_passive[id^=\"${id}_navi_nr_\"]`).css('cursor', 'pointer').on('click', function () { let i = parseInt([...this.id.split('_')].pop()); if (i < begin) { Utl.wtbl(d, id, i, false); } if (end <= i) { Utl.wtbl(d, id, i - len2 + 1, false); } }); if(fst && len-len2 >= 0) { Utl.wtbl(d, id, len-len2, false); } } };Find a suitable jobInsert the job, location, or keyword you're looking forType of advertisementEmployee search Job searchFieldPublic Management (85) Construction (585) Electricity (78) Electronics (42) Finance (204) Photos and design (3) Education (197) Beauty services (72) Infotechnology (202) Management (350) Commerce (764) Environment and waste (8) Law enforcement (68) Unskilled labor (70) Logistics (173) Accommodation (140) Mechanics (241) Maritime affairs (21) Metal industry (201) Sales and marketing (162) Cleaning service (205) Wood industry (112) Agriculture and forestry (102) Social work (156) Driving (288) Teenindus (78) Healthcare (252) Catering (88) Production (437) Area of ​​law (66) Sewing and textiles (164) Varia (17)LocationHarjumaa (2075) Tartumaa (364) Jõgevamaa (37) Järvamaa (87) Valgamaa (49) Raplamaa (56) Viljandimaa (97) Võrumaa (82) Pärnumaa (124) Ida-Virumaa (227) Lääne-Virumaa (103) Põlvamaa (40) Saaremaa (61) Läänemaa (17) Hiiumaa (4)Clear all filtersHighlightIT ProjektijuhtimineRemy M.Tartu linn35 €/hTöökuulutuste reklaami ja jagamisteenusJAANUS S.Tallinn50 €/h"

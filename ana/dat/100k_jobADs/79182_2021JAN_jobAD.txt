"Start Rollup Job API | Java REST Client [7.0] | ElasticDocsIMPORTANT: No additional bug fixes or documentation updates will be released for this version. For the latest information, see the current release documentation.Java REST Client [7.0] » Java High Level REST Client » Rollup APIs » Start Rollup Job API« Put Rollup Job API Stop Rollup Job API »Start Rollup Job APIeditThis functionality is experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features.RequesteditThe Start Rollup Job API allows you to start a job by ID.StartRollupJobRequest request = new StartRollupJobRequest(id);The ID of the job to start.ResponseeditThe returned StartRollupJobResponse indicates if the start command was received.response.isAcknowledged();Whether or not the start job request was received.Synchronous ExecutioneditWhen executing a StartRollupJobRequest in the following manner, the client waits for the StartRollupJobResponse to be returned before continuing with code execution:RollupClient rc = client.rollup();StartRollupJobResponse response = rc.startRollupJob(request, RequestOptions.DEFAULT);Synchronous calls may throw an IOException in case of either failing to parse the REST response in the high-level REST client, the request times out or similar cases where there is no response coming back from the server.In cases where the server returns a 4xx or 5xx error code, the high-level client tries to parse the response body error details instead and then throws a generic ElasticsearchException and adds the original ResponseException as a suppressed exception to it.Asynchronous ExecutioneditExecuting a StartRollupJobRequest can also be done in an asynchronous fashion so that the client can return directly. Users need to specify how the response or potential failures will be handled by passing the request and a listener to the asynchronous rollup-start-job method:RollupClient rc = client.rollup();rc.startRollupJobAsync(request, RequestOptions.DEFAULT, listener);The StartRollupJobRequest to execute and the ActionListener to use when the execution completesThe asynchronous method does not block and returns immediately. Once it is completed the ActionListener is called back using the onResponse method if the execution successfully completed or using the onFailure method if it failed. Failure scenarios and expected exceptions are the same as in the synchronous execution case.A typical listener for rollup-start-job looks like:ActionListener<StartRollupJobResponse> listener = new ActionListener<StartRollupJobResponse>() {    @Override    public void onResponse(StartRollupJobResponse response) {    }    @Override    public void onFailure(Exception e) {    }};Called when the execution is successfully completed.Called when the whole StartRollupJobRequest fails.« Put Rollup Job API Stop Rollup Job API »Most PopularGet Started with Elasticsearch: VideoIntro to Kibana: VideoELK for Logs & Metrics: Video"

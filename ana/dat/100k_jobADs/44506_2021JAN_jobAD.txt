"Sidekiq をバックエンドに ActiveJob を導入 - presentpresent2014-09-30Sidekiq をバックエンドに ActiveJob を導入Rails RubyHeroku に 30 秒でレスポンスを返さないといけないルールがあったのを忘れていたので、 急遽 Rails アプリで時間がかかる処理を非同期にすることにした。Rails で非同期というと Resque や Sidekiq が今のところ人気だけど、 今回は Rails 4.2 で追加予定の ActiveJob を使うことにした。 バックエンドには Sidekiq。Redis をインストールバックエンドに使う Sidekiq は Redis が必要なので、 Vagrant + Chef + Berkshelf で構築している開発環境にインストールする。Berksfile にcookbook \"redisio\"を追加しrm -rf cookbooksberks vendor cookbooksで Cookbook をインストール。redisio のレシピを使うように Vagrantfile をVAGRANTFILE_API_VERSION = \"2\"Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|  # ...  config.vm.provision \"chef_solo\" do |chef|    chef.cookbooks_path = [\"./chef/cookbooks\", \"./chef/site-cookbooks\"]    # ...    # Redis のレシピを追加    chef.add_recipe \"redisio::install\"    chef.add_recipe \"redisio::enable\"  endendという風に修正したら、vagrant provision で chef-solo を実行。ActiveJob と Sidekiq をインストールここからは vagrant ssh で開発環境に入っての作業。Gemfile にgem \"activejob\", \"4.2.0.beta1\", require: \"active_job/railtie\"gem \"sidekiq\"gem \"sinatra\"を追加して bundle install。ActiveJob は gem を直接使う。 Rails 4.1 のアプリで使いたかったので、activesuport 4.2.0.beta2 が不要な、4.2.0.beta1 を使用。 active_job/railtie を require しないと、ActiveJob が Rails に読み込まれなかった。あとは config/environment/development.rb で ActiveJob の設定を記述。 バックエンドで Sidekiq を使うように指定する。Rails.application.configure do  # ...  # ActiveJob のバックエンドに Sidekiq を指定  config.active_job.queue_adapter = :sidekiqendローカルにインストールした Redis を使うので、Sidekiq の Redis 設定は省略可能。Sidekiq の Web コンソールをマウントちゃんとジョブが実行されたか確認したいので、Sidekiq の Web コンソールをマウントする。 sinatra もインストールしたのは、これが理由。 Sidekiq の Web コンソールは Sinatra を別にインストールしないといけない。config/routes.rb を次のように修正。Rails.application.routes.draw do  # ...  # Sidekiq の Web コンソールをマウント  mount Sidekiq::Web => \"/sidekiq\"endジョブを作成次のコマンドでジョブを生成。bundle exec railg generate job calc_scoreするとclass CalcScoreJob < ActiveJob::Base  def perform(*args)  endendみたいな雛形が app/jobs/calc_score_job.rb に生成されるので、 perform メソッドに非同期で実行したい処理を書く。 こんな感じ。class CalcScoreJob < ActiveJob::Base  def perform(*args)    project_id = args[0]    project = Project.find(project_id)    project.calc_score # 30 秒以上かかる集計処理  endendコントローラーでジョブを使うコントローラーで作成したジョブを使ってみる。ドキュメントには perform_later を使うと書いてあったけど、 RubyGems.org からインストールした 4.2.0.beta1 にはまだ実装されていないので、NoMethodError。 代わりに古い API の enqueue を呼び出す。class ProjectsController < ApplicationController  # ...  def calc_score    # 本当は    # CalcScoreJob.perform_later(data)    # ジョブ実行    CalcScoreJob.enqueue(@project.id)    respond_to do |format|      format.html { redirect_to @project }    end  endendジョブを実行Rails プロジェクト直下に、次の内容を書いた Procfile を作成する。web: bundle exec unicorn -p $PORT -c config/unicorn.rbworker: bundle exec sidekiqForeman を使って Rails サーバーと Sidekiq ワーカーを起動。web: bundle exec unicorn -p $PORT -c ./config/unicorn.rbworker: bundle exec sidekiqコントローラーのアクションを呼び出してジョブを実行したら、 Sidekiq の Web コンソールで確認してみる。ブラウザで http://localhost:8080/sidekiq にアクセスしてProcessed の数が増えていれば、ActiveJob のバックエンドとして Sidekiq がちゃんと動いたことになる。griefworker 2014-09-30 11:00Sidekiq をバックエンドに ActiveJob を導入TweetShare on Tumblr広告を非表示にする関連記事2014-03-31Rails + Apartment でマルチテナントな Web サービスを作るはじめに 例えば Qiita::Team のような、企業やチーム向けに提…2014-03-14PDF を出力できる Rails アプリを作成して Heroku で動かすRails アプリに PDF 出力を実装して、それを Heroku で動かすま…2013-04-13Rails 本体で特定のパスに IP アドレス制限をかける方法RailsAdmin で Web サービスの管理ページを実装しているんだけ…2013-03-16Rails で JavaScript を国際化するはじめに Rails で JavaScript を国際化するには、『i18n-js』…2013-01-13Devise + OmniAuth + OmniAuth Facebookで Facebook 認証はじめに Devise を使って実装した認証機能を、Facebook の OAu…もっと読むコメントを書く« 環境や開発者に依存しない設定は Rails の… プロフェッショナルのための実践Heroku入門 »プロフィールid:griefworker福岡在住食い倒れエンジニア読者です 読者をやめる 読者になる 読者になる@t_nakamuraをフォロー最新記事WEB+DB PRESS Vol.120ぼくたちは勉強ができない(20)麺酒場 朱拉2021 年の抱負2020 年ふりかえりゼルダの伝説 ブレス オブ ザ ワイルドAzure SQL Database に接続する WCF サービスの Windows コンテナを Azure Kubernetes Service で動かすReact Router の Link と Material-UI の ListItem を組み合わせるアルスラーン戦記(14)Nintendo Switch月別アーカイブカテゴリーC# (473)グルメ (395)読書 (321)Ruby (133)JavaScript (83)雑記 (79)Python (72)iOS (64)Rails (60)GAE (50)ツール (46)ASP.NET Core (43)AtCoder (38)Objective-C (31)Windows (24)Vim (23)ライフハック (20)Xamarin (20).NET Core (20)React (19)Microsoft Azure (19)Mac (17).NET (17)音楽 (16)個人開発 (14)レジャー (14)Java (13)Heroku (13)Angular (12)CSS (11)Docker (10)HTML (9)開発 (8)Swift (8)GraphQL (8)iPhone (8)Android (7)PostgreSQL (6)IT (6)TypeScript (6)ガジェット (6)AWS (5)Chef (5)SQL Server (4)Linux (4)Elasticsearch (4)Git (3)GCP (2)Chrome (2)ゲーム (2)旅行 (2)Firebase (2)Xcode (1)Kubernetes (1)CoffeeScript (1)Zsh (1)SQLite (1)はてなブログをはじめよう！griefworkerさんは、はてなブログを使っています。あなたもはてなブログをはじめてみませんか？はてなブログをはじめる（無料）はてなブログとはpresentPowered by Hatena Blog | ブログを報告するスターをつけました引用をストックしましたストック一覧を見る閉じる引用するにはまずログインしてくださいログイン閉じる引用をストックできませんでした。再度お試しください閉じる限定公開記事のため引用できません。読者です 読者をやめる 読者になる 読者になる"

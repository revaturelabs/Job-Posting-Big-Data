"Overview of WSDL in XML Tutorial 25 January 2021 - Learn Overview of WSDL in XML Tutorial (5226) | Wisdom Jobs IndiaHomeXml TutorialOverview of WSDL - XMLOverview of WSDL - XML« Previous TopicsComponents Of A Wsdl DocumentUddi ScenariosUddi SpecificationsNext Topics »Creating A Web Service By Using The Soap Toolkit 2.0Product Details Web ServiceVarious Phases Of Project Life CycleInterview QuestionsPractice TestPragnyameter ExamAll TutorialsJob SearchInterview QuestionAll TutorialsPragnyameterJob SearchPractice TestConsider a scenario in which you need to use a Web service that performs complicated scientific calculations. You can search for this type of Web service in the UDDI directory. The directory provides you with a list of Web services that matches your search criteria. You can then register for the Web service that contains several Web methods to perform scientific 75 calculations. However, to use the Web methods, you need to have information about them, such as the description of the Web methods, the parameters that are passed to the Web methods, and so on. You also need to know the manner in which you can interact with the Web service. This information is provided in an XML format in a document called the WSDL document.As stated earlier, the language that describes the Web service in a WSDL document is called WSDL. WSDL, a specification that the W3C developed, aims to provide a standard that can describe services. WSDL is based on XML; therefore, it provides an easy and a simple way to describe services in a text format. WSDL uses XML messages to allow structured communication between a set of endpoints. For example, an XML message can transfer between the client application and the service provider application. In this case, the client application and the service provider application are called endpoints.The XML messages contain either procedure-oriented information or document-oriented information, which is bound to a network protocol, such as SOAP, and transferred between the endpoints. WSDL can also be extended to provide information about the endpoints and the XML messages that are exchanged between them.WSDL provides an interface for a Web service. Therefore, when you create a Web service, you need to create a corresponding WSDL file. A WSDL file has an extension of .wsdl. We will now create a sample WSDL document for a credit card validation Web service. You can use this document as an interface for consuming the Web service.A Sample WSDL DocumentAs discussed earlier, a WSDL document contains the description of a Web service, the Web methods, the way in which a client application can interact with the Web service, and so on. In addition, a client application can use WSDL to frame a request for the Web service. This information is contained in various components of a WSDL document. These components are mentioned in the following list:DefinitionsTypesMessagesOperationsPort TypesBindingsPortsServicesSo that you can understand the preceding components, we will create a sample WSDL document for a Web service that validates the credit card details of a customer. When you create a Web service by using Visual Studio .NET, the description of the Web service is created automatically. The description of the Web service has the same name as that of the Web service: CCValidate.wsdl.Note?/td>In this chapter, we have created a WSDL document in Visual Studio .NET. However, you can create a WSDL document in other ways as well. You will learn about the ways to create a WSDL document in the next projects of this book.When you open the CCValidate.wsdl document, the file contains the following code:<?xml version=\"1.0\" encoding=\"utf-8\"?><definitions xmlns:http=http://schemas.xmlsoap.org/wsdl/http/ xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:s0=\"http://cardvalidationservices.org/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" targetNamespace=\"http://cardvalidationservices.org/\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\"><types><s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://cardvalidationservices.org/\"><s:element name=\"validateCC\"> <s:complexType><s:sequence><s:element minOccurs=\"0\"maxOccurs=\"1\" name=\"CardType\" type=\"s:string\"/><s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"CardNumber\" type=\"s:string\"/></s:sequence></s:complexType></s:element><s:element name=\"validateCCResponse\"> <s:complexType><s:sequence><s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"validateCCResult\" type=\"s:boolean\"/></s:sequence></s:complexType></s:element><s:element name=\"boolean\" type=\"s:boolean\"/></s:schema></types><message name=\"validateCCSoapIn\"><part name=\"parameters\" element=\"s0:validateCC\"/></message><message name=\"validateCCSoapOut\"><part name=\"parameters\" element=\"s0:validateCCResponse\"/></message><message name=\"validateCCHttpGetIn\"> <part name=\"CardType\" type=\"s:string\"/><part name=\"CardNumber\" type=\"s:string\" /></message> <message name=\"validateCCHttpGetOut\"><part name=\"Body\"element=\"s0:boolean\"/></message> <message name=\"validateCCHttpPostIn\"><part name=\"CardType\"type=\"s:string\"/> <part name=\"CardNumber\"type=\"s:string\"/></message><message name=\"validateCCHttpPostOut\"> <part name=\"Body\" element=\"s0:boolean\"/></message><portType name=\"CCValidatorSoap\"> <operation name=\"validateCC\"><input message=\"s0:validateCCSoapIn\"/> <output message=\"s0:validateCCSoapOut\" /></operation></portType> <portType name=\"CCValidatorHttpGet\"><operation name=\"validateCC\"><input message=\"s0:validateCCHttpGetIn\"/> <output message=\"s0:validateCCHttpGetOut\"/></operation></portType><portType name=\"CCValidatorHttpPost\"> <operation name=\"validateCC\"><input message=\"s0:validateCCHttpPostIn\"/> <output message=\"s0:validateCCHttpPostOut\"/></operation></portType> <binding name=\"CCValidatorSoap\" type=\"s0:CCValidatorSoap\"><soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" style=\"document\"/><operation name=\"validateCC\"><soap:operation soapAction=\"http://cardvalidationservices.org/validateCC\" style=\"document\" /><input><soap:body use=\"literal\" /></input><output><soap:body use=\"literal\"/></output></operation></binding> <binding name=\"CCValidatorHttpGet\" type=\"s0:CCValidatorHttpGet\"><http:binding verb=\"GET\"/> <operation name=\"validateCC\"><http:operation location=\"/validateCC\"/> <input><http:urlEncoded /></input><output><mime:mimeXml part=\"Body\" /></output></operation></binding> <binding name=\"CCValidatorHttpPost\" type=\"s0:CCValidatorHttpPost\"><http:binding verb=\"POST\"/><operation name=\"validateCC\"> <http:operation location=\"/validateCC\"/><input><mime:content type=\"application/x-www-form-urlencoded\"/></input> <output><mime:mimeXml part=\"Body\"/></output></operation></binding><service name=\"CCValidator\"> <port name=\"CCValidatorSoap\" binding=\"s0:CCValidatorSoap\"><soap:address location=\"http://cardvalidationservices/CCValidate/CCValidate.asmx\"/></port><port name=\"CCValidatorHttpGet\" binding=\"s0:CCValidatorHttpGet\"><http:address location=\"http://cardvalidationservices/CCValidate/CCValidate.asmx\"/></port><port name=\"CCValidatorHttpPost\" binding=\"s0:CCValidatorHttpPost\"><http:address location=\"http://cardvalidationservices/CCValidate/CCValidate.asmx\" /></port></service></definitions>Now we will discuss the components of a WSDL file with reference to the preceding code.The definitions ElementBecause WSDL is an XML document, it begins with the definition for the XML version that is used in the document. In addition, you need to include the definitions for all namespaces in the document. To include the definitions for the namespaces, you use the definitions element. The definitions element is the root element for all elements in the WSDL document. The syntax for the definitions element is shown in the following code snippet:<?xml version=\"1.0\" encoding=\"utf-8\"?><definitions xmlns:http=http://schemas.xmlsoap.org/wsdl/http/ xmlns:soap=http://schemas.xmlsoap.org/wsdl/soap/ xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:s0=http://cardvalidationservices.org/ xmlns:soapenc=http://schemas.xmlsoap.org/soap/encoding/ xmlns:tm=http://microsoft.com/wsdl/mime/textMatching/ xmlns:mime=http://schemas.xmlsoap.org/wsdl/mime/ targetNamespace=http://cardvalidationservices.org/ xmlns=\"http://schemas.xmlsoap.org/wsdl/\">The previous code includes the definitions element that contains the declarations for including the namespaces in the WSDL document. You can provide a name to the definitions by using the name attribute of the definitions element. For example, you can name the definitions in the previous code as CreditCard by dding the following code:<definitions name=\"CreditCard\"--------</definitions>Next, the URLs of the namespaces that you need to include in the WSDL document are added using the xmlns keyword. You can also provide a prefix to the namespace, as shown:xmlns:soap=http://schemas.xmlsoap.org/wsdl/soap/In the preceding code, soap is the prefix that is assigned to thehttp://schemas.xmlsoap.org/wsdl/soap/ namespace.In addition to adding namespaces to the WSDL document, you can specify a target namespace by using the target Namespace element. A target namespace uniquely identifies a WSDL document. Therefore, the same target namespace cannot be present in any other WSDL document. In addition, you can specify only one target namespace for a WSDL document. The targetNamespace element takes the name of the Web service as its value.The types ElementAfter including the namespaces in the WSDL document, you need to include schemas or references to schemas. You can do this by using the types element. The syntax for the types element is as shown:<definitions -------- ><types> ----</types></definitions>As you can see in the preceding syntax, the types element is included within the definitions element of the WSDL document.A WSDL document contains abstract data type definitions that are required for exchanging messages between endpoints. These data type definitions are included in the types element.Note?/td>The abstract data type definitions that you define in the types element can be included in multiple WSDL documents.To include the data type definitions, WSDL uses XSD because XSD is used extensively as a data type definition mechanism for SOAP. In addition, XSD supports a large set of data types, which you can include in the WSDL document. You learned about the data types that XSD supports \"Basics of Web Services.\"The types element is optional. In addition, you can include only one types element in a WSDL document. However, the types element can, in turn, contain several schemas, as shown in the following code:<types><s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://cardvalidationservices.org/\"><s:element name=\"validateCC\"> <s:complexType><s:sequence><s:element minOccurs=\"0\" maxOccurs=\"1\"name=\"CardType\" type=\"s:string\"/><s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"CardNumber\" type=\"s:string\"/></s:sequence></s:complexType></s:element><s:element name=\"validateCCResponse\"> <s:complexType><s:sequence><s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"validateCCResult\" type=\"s:boolean\"/></s:sequence></s:complexType></s:element><s:element name=\"boolean\" type=\"s:boolean\"/></s:schema></types>NoteThe preceding code contains definitions for abstract data types that can be serialized as a network protocol. For example, the data types that map to the messages can be serialized in the form of a SOAP message or an HTTP request.Now we will discuss the statements in the preceding code. The preceding code uses the schema element that contains the target Namespace attribute to specify the target namespace for the WSDL document.Next, the code uses element to declare an element with a name validateCC. When you define an element, you need to specify its data type. The validateCC element is a complex data type. You can specify an element as a complex data type by using the complex Type element.The sequence element defines the sequence of the child elements that are declared as complex data types. In this case, two string type child elements with the names CardType and CardNumber are declared. These elements represent the input values that the user needs to provide to validate the credit details.As you can see, the child element takes two attributes, minOccurs and maxOccurs. The minOccurs attribute specifies the minimum number of times that the element can appear in the containing element validateCC. To make this element optional, you can specify a value of 0. Similarly, the max Occurs attribute specifies the maximum number of times that the element can appear in the containing element validateCC. Because the CardType and CardNumber elements can accept only one value, the max Occurs attribute is set to 1.Next, the code includes another complex type element with the name validateCCResponse. This element contains a Boolean type child element with the name validateCCResult. This element represents the value that the Web service returns and can be present only once in the containing element.In addition to the validateCC and validateCCResponse elements, the types element declares a Boolean type element with the name boolean.The message ElementAs you know, the information is exchanged in the form of messages between two endpoints. Therefore, after declaring the data types of the messages in the types element, you need to define the structure of the message. Messages are defined using the message element. The syntax of the message element is as follows:<definitions ---------- ><message> ----------</message></definitions>Messages represent an abstract definition of the data that you need to transfer between two endpoints. In addition, the message element defines the structure of the messages. To do this, the message element consists of a number of parts. Parts are logical units containing information that you need to communicate, and they are associated with the type systems that you define in the types element. In addition to associating a part with the type system that is defined in the types element, you can associate a part with the type system that is defined in other XML schema files or XML data types schema. To associate a part with a type system, you use the message-typing attribute.You can use the part element to define a part in a message. A message that contains a part element is shown here:<message name=\"validateCCSoapIn\"><part name=\"parameters\" element=\"s0:validateCC\"/></message><message name=\"validateCCSoapOut\"><part name=\"parameters\" element=\"s0:validateCCResponse\"/></message><message name=\"validateCCHttpGetIn\"><part name=\"CardType\" type=\"s:string\"/><part name=\"CardNumber\" type=\"s:string\"/></message><message name=\"validateCCHttpGetOut\"><part name=\"Body\" element=\"s0:boolean\"/></message><message name=\"validateCCHttpPostIn\"><part name=\"CardType\" type=\"s:string\" /><part name=\"CardNumber\" type=\"s:string\"/></message><message name=\"validateCCHttpPostOut\"><part name=\"Body\" element=\"s0:boolean\"/></message>The preceding code uses the message element to define the message validateCCSoapIn. The WSDL document contains a message definition for the messages that are transferred using SOAP, HTTP GET, and HTTP POST. In addition, each In message that is defined for a protocol has a corresponding Out message. Therefore, the previous code contains six message declaration statements—two for each protocol.The validateCCSoapIn message contains a part called parameters. The validateCC element that is defined in the types element is passed as a parameter to the parameters part. The parameters part is associated with the complex type that is defined in the types element.The validateCCSoapIn message has a corresponding validateCCSoapOut message that contains the parameters part. The validateCCResponse element that represents the value that is returned by the Web service is passed as a parameter to the validateCCSoapOut message.Note?/td>As you can see, the part declaration statement contains the prefix s0, which indicates that the WSDL document is created using Visual Studio .NET.Similarly, the validateCCHttpGetIn and validateCCHttpGetOut messages are defined for the HTTP GET protocol. The validateCCHttpGetIn message contains two string type parts: CardType and CardNumber. In addition, the validateCCHttpGetOut message contains a Boolean type part, Body, which represents the value that the Web service returns.Similarly, Visual Studio .NET creates a code for the HTTP POST protocol, as shown in the preceding code.The operation ElementAs you already know, a Web service contains Web methods that you can use to perform a specific operation. A client application can request these operations and then execute them. Therefore, after you define messages, you need to associate them with the corresponding operation. To do this, you use the operation element, which, in turn, is included in the portType element. You will learn about the portType element in the later section titled \"The portType Element.\"The syntax of the operation element is as shown:<portType -------><operation --------> ---------</operation></portType>Similar to the message element, you need to have operations for all network protocols, such as SOAP, HTTP GET, and HTTP POST. The operation element has the input and output elements. The input element takes the input message as the value, and the output element takes the output message as the value.For example, an operation with the name validateCC is created. The operation has an input element. The value assigned to the input element is validateCCSoapIn message. In addition, the operation element contains an output element. The value assigned to the output element is validateCCSoapOut message. The code for the operation element is as shown:<portType name=\"CCValidatorSoap\"><operation name=\"validateCC\"> <input message=\"s0:validateCCSoapIn\"/><output message=\"s0:validateCCSoapOut\"/></operation></portType> <portType name=\"CCValidatorHttpGet\"><operation name=\"validateCC\"><input message=\"s0:validateCCHttpGetIn\"/> <output message=\"s0:validateCCHttpGetOut\"/></operation></portType><portType name=\"CCValidatorHttpPost\"> <operation name=\"validateCC\"><input message=\"s0:validateCCHttpPostIn\"/> <output message=\"s0:validateCCHttpPostOut\"/> </operation> </portType>A WSDL document supports four types of operations. These operations are discussed in the following list:One-way operation. As the name suggests, in a one-way operation, one endpoint sends a message to another endpoint. However, the first endpoint, which is the client application, does not receive a response from the second endpoint, which is the provider application.For example, an operation element that contains only the input element is a one-way operation. The following code snippet shows an example of a one-way operation.<portType name=\"InputValueSoap\"><operation name=\"InputValue\"> <input message=\"s0:InputValueSoapIn\"/></operation></portType>Notification operation. A notification operation is similar to a one-way operation. However, in a notification operation, the service provider application sends a message to the client application. For example, the operation that contains only the output element is a notification operation. Consider the following code snippet:<portType name=\"OutputNotificationSoap\"> <operation name=\"OutputNotification\"><input message=\"s0:OutputNotificvationSoapOut\" /></operation> </portType>Request-Response operation. As the name suggests, in a request-response operation, the client application sends a request to the provider application that processes the request and sends the response back to the client application. The request-response operation contains both the input and output elements. It is the most common operation used in Web services. The validate CC operation that you created in the previous code is an example of a request-response operation.Solicit-Response operation. The solicit-response operation is similar to the request response operation. However, in the solicit-response operation, the provider application sends a message to the client application. The solicit-response operation contains the input and output elements.This operation is not commonly used in the Web services scenario. The example of this type of operation is shown in the following code:<portType name=\"CallResultSoap\"><operation name=\"CallResult\"> <output message=\"s0:CallResultSoapOut\"/> <input message=\"s0:CallResultSoapIn\"/> </operation> </portType>The portType ElementYou can combine the operations in WSDL document to form a set of operations called a port type. You can declare port types by using the portType element. In addition, you can specify a name for the port type by using the name attribute of the portType element. For example, you can combine the input and output elements of the validateCC operation in a port type, CCValidatorSoap. The code for the CCValidatorSoap port type is as shown:<portType name=\"CCValidatorSoap\"><operation name=\"validateCC\"> <inputmessage=\"s0:validateCCSoapIn\"/> <output message=\"s0:validateCCSoapOut\"/></operation></portType>The preceding code declares a port type with the name CCValidatorSoap, which contains the validateCC operation. The CCValidatorSoap port type is used to bind the operation to a protocol, such as SOAP, HTTP GET, and HTTP POST.The binding ElementAfter creating a port type, it needs to be associated with a protocol, such as SOAP. This is called binding. To bind a port type with a protocol, you use the binding element. In addition, you can bind a port type to any number of protocols. For example, you can bind the same port type to the SOAP, HTTP GET, and HTTP POST protocols. These protocols, in turn, transfer the message from one endpoint to another.Consider the following code snippet for the binding element:<binding name=\"CCValidatorSoap\" type=\"s0:CCValidatorSoap\"><soap:binding transport=http://schemas.xmlsoap.org/soap/http style=\"document\" /><operation name=\"validateCC\"> <soap:operation soapAction=\"http://cardvalidationservices.org/validateCC\" style=\"document\"/><input><soap:body use=\"literal\" /></input> <output><soap:body use=\"literal\" /></output></operation></binding> <binding name=\"CCValidatorHttpGet\" type=\"s0:CCValidatorHttpGet\"><http:binding verb=\"GET\" /> <operation name=\"validateCC\"><http:operation location=\"/validateCC\" /><input><http:urlEncoded /> </input><output><mime:mimeXml part=\"Body\" /></output></operation></binding> <binding name=\"CCValidatorHttpPost\" type=\"s0:CCValidatorHttpPost\"><http:binding verb=\"POST\"/><operation name=\"validateCC\"> <http:operation location=\"/validateCC\" /><input><mime:content type=\"application/x-www-form-urlencoded\"/> </input><output><mime:mimeXml part=\"Body\" /> </output> </operation> </binding>The preceding code creates a binding with the name CCValidatorSoap. The name attribute specifies a unique name for the binding. In addition, you need to specify the port type for the binding element. You can do this by using the type attribute.As you can see, the binding element contains many extensibility elements. These extensibility elements specify additional information about the service that the WSDL document defines. The transport element that is used in the preceding code is an example of an extensibility element. The transport element specifies the transport protocol.In addition, the binding element includes a style element that specifies the style that is used to serialize a message to SOAP. The style can be either RPC based or document based. In the preceding code, the document-based serialization is used. In the document based serialization, messages are serialized by using a standard schema.The binding element also includes the operation element, which specifies additional information about the operations. This information includes the style of the messages within the operation. You can specify the style by using the style attribute, which takes the value rpc or document. In addition, you can specify the soapAction header field in the soap:operation element. The soap Action header field provides information about the way in which a SOAP request is processed.When you create a message, it needs to be associated with a protocol. This means that a message is serialized in the form of either a SOAP request or a response. Therefore, you need to specify the encoding form used for the input and output elements of a message. You can do this by using the soap:body element.soap:body is another extensibility element that is used inside the binding element. Each input and output element in a message has a different soap:body element that is defined.For example, you need to include the soap:body element for the input and output elements of the validateCC operation as follows:<operation name=\"validateCC\"><soap:operation soapAction=\"http://cardvalidationservices.org/validateCC\" style=\"document\" /><input><soap:body use=\"literal\" /></input> <output><soap:body use=\"literal\" /> </output> </operation>The soap:body element contains a use attribute that specifies the encoding form for a message. The use attribute can take two values: literal or encoded. The following list discusses the encoding forms in detail:Literal form. In the literal encoding form, the message part is encoded as per the DTD that is specified in the schema. This means that when a part is serialized, the schema validates the part. To specify the value of the use attribute as literal, you use the literal keyword, as shown in the previous code.Encoded form. The encoded form defines a specific or a user-defined way to serialize a message. To do this, the encodingStyle attribute is used.The port ElementA binding is located at an individual endpoint. The port element, which is contained within the service element, specifies the address of a binding. We will explain the service element in the next section, \"The service Element.\"While defining a port, you need to specify a unique name. To do so, you use the name attribute of the port element. In addition, the port element contains an extensibility element: soap:address. This element binds the port to an address of an endpoint, which is a URI of an endpoint. The users can connect to the service by using the URI. Following is an example of a port element:<service name=\"CCValidator\"><port name=\"CCValidatorSoap\" binding=\"s0:CCValidatorSoap\"> <soap:address location=\"http://cardvalidationservices/CCValidate/CCValidate.asmx\" /></port> <port name=\"CCValidatorHttpGet\" binding=\"s0:CCValidatorHttpGet\"> <http:address location=\"http://cardvalidationservices/CCValidate/CCValidate.asmx\" /> </port><port name=\"CCValidatorHttpPost\" binding=\"s0:CCValidatorHttpPost\"> <http:address location=\"http://cardvalidationservices/CCValidate/CCValidate.asmx\" /> </port> </service>The preceding code creates a port for each binding that corresponds to the SOAP, HTTP POST, and HTTP GET protocols. Next, the soap:address element binds the port to the corresponding URIs.The service ElementAs you can see in the previous code, a single WSDL document might contain several ports. Therefore, you need to combine these ports. You can define a service to combine the ports in a WSDL document. In addition, you can specify a unique name for this set of ports. A service is defined using the service element. The syntax of the service element is as shown:<service ---------><port ---------> -------------</port></service>The service element contains ports that correspond to each of the protocols. However, you should ensure that all ports expose the same functionality. The elements that are used in a WSDL document are summarized in Table.The Elements that are Used in a WSDL DocumentAs stated earlier, we created the Web service that corresponds to the CCValidate.wsdl document in Visual Studio .NET. To see the document in Visual Studio .NET, refer to FigureThe WSDL Document in Visual Studio .NET.« Previous TopicsComponents Of A Wsdl DocumentUddi ScenariosUddi SpecificationsNext Topics »Creating A Web Service By Using The Soap Toolkit 2.0Product Details Web ServiceVarious Phases Of Project Life CycleXML Related TutorialsHTML Tutorial PHP TutorialASP.NET Tutorial Java TutorialCSS Tutorial Java XML TutorialebXML Tutorial XML DOM TutorialXML-RPC Tutorial XSD TutorialXML Related Interview QuestionsSoap Tool Interview Questions HTML Interview QuestionsPHP Interview Questions ASP.NET Interview QuestionsPHP5 Interview Questions Java Interview QuestionsCSS Interview Questions XSLT Interview QuestionsJava XML Interview Questions XMLHttpRequest (XHR) Interview QuestionsebXML Interview Questions XML DOM Interview QuestionsXML-RPC Interview Questions XSD Interview QuestionsSoap Web Services Interview Questions XSL Interview QuestionsXml Publisher Interview QuestionsXML Related Practice TestsSoap Tool Practice Tests HTML Practice TestsPHP Practice Tests ASP.NET Practice TestsPHP5 Practice Tests CSS Practice TestsXSLT Practice Tests Java XML Practice TestsXml TutorialXml Interview QuestionsXml Practice TestsList of TutorialsDevelopers Best Practices TutorialYAML TutorialSalesforce TutorialAdobe Robohelp TutorialSublime Text TutorialGItlab TutorialAdobe InDesign CC TutorialSaltStack TutorialRead MoreList of TopicsSummaryCareer Planning in best practiceManaging ManagersStress ManagementEager to LearnHandy Tools & TechniquesKeep the Assets SafelyTesting is the ReligionRead MoreInterview QuestionsRavendb Interview QuestionsCobertura Interview QuestionsJava Quartz Interview QuestionsCheque Truncation System Interview QuestionsECS Interview QuestionsRTGS Interview QuestionsPrivate Equity Interview QuestionsExcel Formulas Interview QuestionsRead MoreView All CompaniesAll JobsAdvanced SearchFreshers worldFree job alertSarkari ResultFind all JobsBrowse all JobsJobs By SkillsJobs By DesignationsJobs By CategoryInterview QuestionsJobs By LocationsJobs in DelhiJobs in BangaloreJobs in ChennaiJobs in MumbaiJobs in PuneJobs in HyderabadJobs in KolkataJobs in ChandigarhJobs in GurgaonJobs in NoidaJobs in AhmedabadJobs in VijayawadaJobs in Andhra PradeshJobs in VisakhapatnamJobs in TirupatiJobs in GunturJobs in RajahmundryJobs in AssamJobs in DibrugarhJobs in GuwahatiJobs in SilcharJobs in TezpurJobs in ChhattisgarhJobs in RaipurJobs in RaigarhJobs in KorbaJobs in BilaspurJobs in GujaratJobs in RajkotJobs in GandhinagarJobs in SuratJobs in VadodaraJobs in HaryanaJobs in AmbalaJobs in FaridabadJobs in DharuheraJobs in HisarJobs in JharkhandJobs in BokaroJobs in DhanbadJobs in JamshedpurJobs in RanchiJobs in KeralaJobs in TrivandrumJobs in KottayamJobs in ErnakulamJobs in KollamJobs in KarnatakaJobs in BidarJobs in MysoreJobs in GulbargaJobs in MangaloreJobs in UttarakhandJobs in DehradunJobs in HaridwarJobs in KashipurJobs in PantnagarJobs in Madhya PradeshJobs in BhopalJobs in IndoreJobs in JabalpurJobs in UjjainJobs in OdishaJobs in BhubaneshwarJobs in CuttackJobs in PuriJobs in JharsugudaJobs in RajasthanJobs in JodhpurJobs in JaipurJobs in Mount AbuJobs in UdaipurJobs in PunjabJobs in AmritsarJobs in PatialaJobs in RajpuraJobs in MohaliJobs in Tamil NaduJobs in KanchipuramJobs in MaduraiJobs in OotyJobs in CoimbatoreJobs in TelanganaJobs in NizamabadJobs in KhammamJobs in KarimnagarJobs in WarangalJobs in Uttar PradeshJobs in LucknowJobs in AllahabadJobs in KanpurJobs in VaranasiJobs in West BengalJobs in KharagpurJobs in BurdwanJobs in HaldiaJobs in SiliguriJobs in MaharashtraJobs in NasikJobs in SolapurJobs in Navi MumbaiJobs in NagpurJobs in Himachal PradeshJobs in ShimlaJobs in ChambaJobs in DalhousieJobs in DharmasalaJobs in Jammu KashmirJobs in JammuJobs in SrinagarJobs in MeghalayaJobs in ShillongJobs in GoaJobs in PanjimJobs in Vasco Da GamaJobs in NagalandJobs in DimapurJobs in KohimaView All LocationsAll JobsAdvanced SearchFreshers worldFree job alertSarkari ResultFind all JobsBrowse all JobsJobs By SkillsJobs By DesignationsJobs By CategoryInterview QuestionsGovt JobsState Govt JobsAP Government JobsBihar Government JobsDelhi Government JobsGujarat Government JobsJharkhand Government JobsKarnataka Government JobsKerala Government JobsMaharashtra Government JobsOrissa Government JobsPunjab Government JobsRajasthan Government JobsTamilnadu Government JobsTelangana Government JobsUP Government JobsWest Bengal Government JobsView All Government JobsBank JobsAllahabad bank JobsAxis Bank JobsBank of Baroda JobsBank Of India JobsBank Of Maharashtra JobsCanara Bank JobsCorporation Bank JobsCosmos Bank JobsFederal Bank JobsHDFC Bank JobsICICI Bank JobsIDBI Bank JobsKarur Vysya Bank JobsReserve Bank of India JobsState Bank of India JobsView All Banks JobsDefence JobsBSF JobsIndian Army JobsIndian Air Force JobsIndian Navy JobsPolice JobsAIATSL Recruitment JobsBihar Police Recruitment JobsBSF Constable Recruitment JobsCRPF JobsCISF Recruitment JobsDRDO JobsHAL Recruitment JobsManipur Police Recruitment JobsMTS Air Force JobsUP Police Recruitment JobsView All Defence JobsPSCAPPSC JobsBPSC JobsCGPSC JobsGPSC JobsHPPSC JobsJKPSC JobsJPSC JobsMPPSC JobsOPSC JobsRPSC JobsTNPSC JobsTSPSC JobsUPSC JobsUPPSC JobsWBPSC JobsView All PSCSSC JobsBihar SSC Recruitment JobsSSC Central JobsState Wise SSC Posts JobsOSSC Recruitment JobsHPSSC Recruitment JobsHSSC Recruitment JobsSSC Allahabad Recruitment JobsSSC Assistant Grade JobsSSC Constable Recruitment JobsSSC ER Recruitment JobsSSC Karnataka Recruitment JobsSSC Kerala Recruitment JobsSSC NWR Recrutment JobsSSC WR Recruitment JobsSSCMPR Recruitment JobsView All SSC JobsRailway JobsRRC jobsCentral Railway Recruitment JobsCLW Recruitment JobsCRWC Recruitment JobsDLW Recruitment JobsEastern Railway Recruitment JobsGujarat Metro Rail Recruitment JobsICRON Recruitment JobsIRSDC Recruitment JobsKochi Metro Rail Recruitment JobsMumbai Metro Rail Recruitment jobsRRB Ahmedabad Recruitment jobsRRB Secunderabad Recruitment jobsRRC Central Railway Recruitment jobsRVNL Recruitment JobsView All Railway JobsAll JobsAdvanced SearchFreshers worldFree job alertSarkari ResultFind all JobsBrowse all JobsJobs By SkillsJobs By DesignationsJobs By CategoryInterview QuestionsWalkin JobsLatest walkinsToday walkinsTomorrow walkinsLatest WalkinsFresher WalkinsWalkins by SkillBpo Walkins In BangaloreBpo Walkins In ChennaiBpo Walkins In GurgaonBpo Walkins In HyderabadBpo Walkins In MumbaiBpo Walkins In PuneDot Net Walkins In BangaloreDot Net Walkins In ChennaiDot Net Walkins In GurgaonDot Net Walkins In HyderabadDot Net Walkins In PuneJava Walkins In BangaloreJava Walkins In ChennaiJava Walkins In GurgaonJava Walkins In HyderabadJava Walkins In KolkataJava Walkins In MumbaiJava Walkins In PunePhp Walkins In BangalorePhp Walkins In ChennaiPhp Walkins In GurgaonPhp Walkins In HyderabadPhp Walkins In MumbaiPhp Walkins In PuneWalkins by locationWalkins In AhmedabadWalkins In BangaloreWalkins In ChandigarhWalkins In ChennaiWalkins In DelhiWalkins In GurgaonWalkins In GuwahatiWalkins In HyderabadWalkins In JaipurWalkins In KanpurWalkins In KolkataWalkins In MumbaiWalkins In NoidaWalkins In PatnaWalkins In PuneWalkins In SuratToday Walkins In AhmedabadToday Walkins In BangaloreToday Walkins In ChandigarhToday Walkins In ChennaiToday Walkins In DelhiToday Walkins In GurgaonToday Walkins In GuwahatiToday Walkins In HyderabadToday Walkins In JaipurToday Walkins In KanpurToday Walkins In KolkataToday Walkins In MumbaiToday Walkins In NoidaToday Walkins In PatnaToday Walkins In PuneToday Walkins In SuratWalkins by CompanyAmazon Walkins In DelhiGoogle Walkins In NoidaGoogle Walkins In MumbaiHSBC Walkins In ChennaiHSBC Walkins In MumbaiHSBC Walkins In HyderabadHSBC Walkins In BangaloreHCL Walkins In MumbaiHCL Walkins In HyderabadHCL Walkins In BangaloreIBM Walkins In BangaloreIBM Walkins In ChennaiIBM Walkins In HyderabadInfosys Walkins In BangaloreInfosys Walkins In ChennaiInfosys Walkins In MumbaiTCS Walkins In BangaloreTCS Walkins In HyderabadTCS Walkins In MumbaiTech Mahindra Walkins In ChandigarhTech Mahindra Walkins In ChennaiTech Mahindra Walkins In DelhiTech Mahindra Walkins In GurgaonTech Mahindra Walkins In HyderabadTech Mahindra Walkins In NoidaTech Mahindra Walkins In PuneView All WalkinsAll JobsAdvanced SearchFreshers worldFree job alertSarkari ResultFind all JobsBrowse all JobsJobs By SkillsJobs By DesignationsJobs By CategoryInterview QuestionsAssessmentsTutorialsPOPULAR COURSESIT SkillsAdobe Flex TutorialAdv Java TutorialAgile Testing TutorialAjax TutorialAndroid TutorialAsp.net TutorialBlackberry TutorialBootstrap TutorialC TutorialC++TutorialCakePHP TutorialCOBOL TutorialCore Java TutorialCss3 TutorialDrupal TutorialHadoop TutorialHtml TutorialIBM Cognos TutorialIOS TutorialJ Query TutorialJava TutorialJava Script TutorialJMeter TutorialJoomla TutorialLinux TutorialLoadRunner TutorialMaven TutorialMS Azure TutorialMysql TutorialNetworking TutorialNode.js TutorialOracle TutorialPHP TutorialPython TutorialQlik View TutorialQTP TutorialSap BI TutorialSap Hr TutorialSelenium TutorialT-SQL TutorialTesting Tools TutorialVSAM TutorialManagement SkillsAdvertising Management TutorialArtificial Intelligence TutorialBusiness Analyst TutorialBusiness Environment TutorialConsumer Behaviour TutorialCritical Thinking TutorialE-commerce Concepts TutorialFood Resources Manual TutorialForex Management TutorialGlobal Money Markets TutorialStatistics TutorialManagement Hotel TutorialManagerial Economics TutorialMarketing Management TutorialMarketing Research TutorialOrganisational Behaviour TutorialPayroll Management TutorialPatent Law TutorialPrinciples Of Management TutorialPrinciples Of Service Marketing Management TutorialProject Management TutorialProduction And Operations Management TutorialQuantitative Techniques TutorialQuality Management TutorialResearch Methodology TutorialSales Management TutorialStrategic Management TutorialWorking Capital Management TutorialCommunication SkillsBusiness Communications TutorialPrinciples Of Communication TutorialBusiness SkillsBusiness Ethics TutorialChange Management TutorialMarketing Strategy TutorialSales Forecasting TutorialDigital Marketing SkillsDigital Marketing TutorialMobile Marketing TutorialPay Per Click (ppc) TutorialSocial Media Marketing TutorialHuman Resources SkillsHr Management TutorialTraining And Development TutorialHealth Care SkillsMedical Terminology(adaptive*) TutorialPharmacology TutorialFinance SkillsAccounts And Finance For Managers TutorialBusiness Management For Financial Advisers TutorialFinancial Management TutorialModern Banking TutorialTally TutorialAll CoursesAll Practice TestsAll JobsAdvanced SearchFreshers worldFree job alertSarkari ResultFind all JobsBrowse all JobsJobs By SkillsJobs By DesignationsJobs By CategoryInterview QuestionsServicesCareer EdgeResume Writing TipsTips to revamp your tech resume7 Step guide to post your resume onlineChallenge of Resume Preparation for FreshersTips for formatting your resumeHave a Short and Attention Grabbing ResumeDo you have employment gaps in your resume?Making a great Resume: Get the basics rightResume Tips, Resume AdviceHow to get right job with right resume?How to design your resume?Have you ever lie on your resume? Read ThisTips for writing resume in slowdownWhat do employers look for in a resume?21 Resume tips for a killer resumeResume tips for techiesInterview Tips5 ways to be authentic in an interviewTips to help you face your job interviewTop 10 commonly asked BPO Interview questions5 things you should never talk in any job interview2018 Best job interview tips for job seekers7 Tips to recruit the right candidates in 20185 Important interview questions techies fumble mostWhat are avoidable questions in an Interview?Top 4 tips to help you get hired as a receptionist8 things ever to say in a job interview5 Tips to Overcome Fumble During an InterviewHow to Overcome Pre-interview JittersWhat Not to Do in a Job Interview?8 Mock Interview Questions for FreshersHow to face Telephone Interview?Career TipsThe impact of GST on job creationHow Can Freshers Keep Their Job Search Going?How to Convert Your Internship into a Full Time Job?5 Top Career Tips to Get Ready for a Virtual Job FairSmart tips to succeed in virtual job fairsWhy Email Marketing?Top 10 facts why you need a cover letter?6 things to remember for Eid celebrations9 ways to get succeed in job search5 ways to turn your internship in a job7 job search tips during RamadanTop 5 GCC jobs of the futureMost popular women in Tech HistoryBlind Hiring: 2018 Recruitment trend3 Golden rules to optimize your job searchNewsUnion Budget 2018 HighlightsOnline hiring saw 14% rise in November: ReportHiring Activities Saw Growth in March: ReportAttrition rate dips in corporate India: Survey2016 Most Productive year for Staffing: StudyThe impact of Demonetization across sectorsMost important skills required to get hiredHow startups are innovating with interview formatsDoes chemistry workout in job interviews?15 signs your job interview is going horriblyOverview of IT/ITes sectorTime to Expand NBFCs: Rise in Demand for TalentHere's how to train middle managersThis is how banks are wooing startupsNokia to cut thousands of jobsAll JobsAdvanced SearchFreshers worldFree job alertSarkari ResultFind all JobsBrowse all JobsJobs By SkillsJobs By DesignationsJobs By CategoryInterview QuestionsABOUT USAbout Wisdom JobsContact USPrivacy PolicyTerms of UseDisclaimerReport a problemHelpPress CornerHtml site MapTOP COMPANY JOBSHDFC CareersInfosys CareersMphasis CareersAxis Bank CareersAshok Leyland CareersAEGIS CareersConvergys CareersAdobe CareersICICI Bank CareersIndigo CareersSpicejet CareersHSBC CareersTOP CATEGORY JOBSGovt JobsFreshers worldToday walkinsSarkari ResultAgriculture JobsDefence JobsNGO JobsReal Estate JobsShipping JobsJava JobsEducation JobsJournalism JobsSAP JobsIT Software JobsJOBS IN TOP LOCATIONSJobs in DelhiJobs in BangaloreJobs in MumbaiJobs in PuneJobs in ChennaiJobs in HyderabadJobs in KolkataJobs in ChandigarhJobs in GurgaonJobs in NoidaJobs in AhmedabadBrowse All JobsASSESSMENTSPragnya MeterTUTORIALSE-UniversitySkill SetsPractice TestsSERVICESResume WritingProfile EnhancementRecruiter ReachJOB SEEKERRegister NowRECRUITERSPost an alertResume SearchRESOURCESCareer EdgeJob Posting GuideFree Job AlertsOur Portals :Gulf JobsCanada JobsUSA JobsItaly JobsUK JobsSouth Africa JobsMalaysia JobsSingapore JobsAustralia JobsNew Zealand JobsAll rights reserved © 2020 Wisdom IT Services India Pvt. LtdNew to Wisdomjobs? Sign upXML Topics"

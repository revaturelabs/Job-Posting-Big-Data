"LLDB Sanitized #1793 Changes [Jenkins]Skip to contentJenkinslog in | sign upJenkinsxbolva00My ViewsAllLLDB Sanitized#1793Back to ProjectStatusChangesConsole OutputView as plain textView Build InformationParametersTimingsGit Build DataGit Build DataGit Build DataFailure Scan LogSupportOpen Blue OceanPipeline StepsWorkspacesPrevious BuildNext BuildChangesSummary[PDB] Drop LF_PRECOMP from debugTypes earlier (details)Fix test after D86156. (details)[X86] Always use 16-bit displacement in 16-bit mode when there is no base or index register. (details)[NewPM] Fix 2003-02-19-LoopInfoNestingBug.ll under NPM (details)[NewPM][SCEV] Fix constant-fold-gep.ll under NPM (details)[NewPM] Fix opt-hot-cold-split.ll under NPM (details)Fully qualify some more namespace in MLIR ODS to be more friendly to dialects not defined under the mlir namespace (NFC) (details)[InstCombine] Add tests for statepoint simplification (details)[Test] Add signed version of a test (details)[clang-tidy] Fix crash in modernize-use-noexcept on uninstantiated throw class (details)[lldb] Reword CompilerType docstring to not say \"generic type\" (details)[MLIR][NFC] Value print update for block arguments (details)libclc: Add a __builtin to let SPIRV targets select between SW and HW FMA (details)[ThinLTO] Relax thinlto_embed_bitcode.ll check (details)[X86] Add test case for non-power of 2 scatter. NFC (details)[X86] Don't scalarize gather/scatters with non-power of 2 element counts. Widen instead. (details)[MemorySSA] Set MustDominate to true for PhiTranslation. (details)[llvm-rc] Allow omitting components from VERSIONINFO versions (details)[llvm-rc] Update a comment. NFC. (details)[llvm-rc] Lowercase the option definitions. NFC. (details)[obj2yaml] Add support for dumping the .debug_addr(v5) section. (details)[MemorySSA] Report unoptimized as None, not MayAlias. (details)[Test] Some more potential range check elimination opportunities (details)[flang] Fix docs build (details)[Test] Add positive range checks tests in addition to negative (details)Revert \"[Asan] Fix false leak report\" (details)Revert \"[Asan] Accept __lsan_ignore_object for redzone pointer\" (details)[ARM][MachineOutliner] Add calls handling. (details)[clangd] Don't use zlib when it's unavailable. (details)[ARM][LowOverheadLoops] Combine a VCMP and VPST into a VPT (details)Follow up rG635b87511ec3: forgot to add/commit the new test file. NFC. (details)[DebugInfo][flang] DISubrange support for fortran assumed size array (details)[llvm-readobj][test] - Address a forgotten review comment for D86923. (details)[clangd] Implement hot index reloading for clangd-index-server (details)[Support] Add GlobPattern::isTrivialMatchAll() (details)[LLD][ELF] Optimize linker script filename glob pattern matching NFC (details)[llvm-readobj][test] - Improve section-symbols.test (details)Commit 1b88845ce1b7731a062c3d1fcc80d201c70e4a44 by rnk[PDB] Drop LF_PRECOMP from debugTypes earlierThis is a minor simplification to avoid firing up a BinaryStreamReaderand CVType parser.lld/COFF/DebugTypes.cpplld/COFF/InputFiles.cppCommit 3b3ca5c989f9f8e29e4b8b10e77eb08c2b822533 by asbirleaFix test after D86156.llvm/test/CodeGen/AMDGPU/opt-pipeline.llCommit 2ce1a697f037469e737db1ad41dfa14ec653ec53 by craig.topper[X86] Always use 16-bit displacement in 16-bit mode when there is no base or index register.Previously we only did this if the immediate fit in 16 bits, butthe GNU assembler seems to just truncate.Fixes PR46952llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cppllvm/test/MC/X86/x86-16.sCommit 3b38062d1c8b6965ded5b6bc686db63f1a59e818 by aeubanks[NewPM] Fix 2003-02-19-LoopInfoNestingBug.ll under NPMAlso move it to a more appropriate directory.llvm/test/Analysis/LoopInfo/2003-02-19-LoopInfoNestingBug.llllvm/test/Other/2003-02-19-LoopInfoNestingBug.llCommit b1b187a1386e5d7bfecb2a63dc8c654583684e22 by aeubanks[NewPM][SCEV] Fix constant-fold-gep.ll under NPMllvm/test/Other/constant-fold-gep.llCommit bb371f8ce8c2fc77e0ab6c87d253a1d1db00d0eb by aeubanks[NewPM] Fix opt-hot-cold-split.ll under NPMPin to legacy PM, there are already NPM RUN lines.llvm/test/Other/opt-hot-cold-split.llCommit 37c5dbb31a2fa9aa6618efe56ab0d6cd8f358957 by joker.ephFully qualify some more namespace in MLIR ODS to be more friendly to dialects not defined under the mlir namespace (NFC)mlir/include/mlir/Interfaces/SideEffectInterfaces.tdCommit 00f09dd4c13d7e86d07728ba03700a18e9013adf by serguei.katkov[InstCombine] Add tests for statepoint simplificationThis tests increase coverage for change introduced in D85959Reviewers: reames, reamesReviewed By: reamesSubscribers: llvm-commitsDifferential Revision: https://reviews.llvm.org/D87224llvm/test/Transforms/InstCombine/statepoint-cleanup.llCommit 8a04cdb510c89b8c6419d6ce1e98967d7ac9abb2 by mkazantsev[Test] Add signed version of a testllvm/test/Transforms/IndVarSimplify/predicated_ranges.llCommit 96c6d012dfe2492891d0f0450dd7cd5f3c1ca88c by Zinovy Nis[clang-tidy] Fix crash in modernize-use-noexcept on uninstantiated throw classBug: https://bugs.llvm.org/show_bug.cgi?id=47446Differential Revision: https://reviews.llvm.org/D87627clang-tools-extra/clang-tidy/modernize/UseNoexceptCheck.cppclang-tools-extra/test/clang-tidy/checkers/modernize-use-noexcept-opt.cppCommit 757ac4ccfb8b024454b4f445a2b5c8985da5dc8a by davelee.com[lldb] Reword CompilerType docstring to not say \"generic type\"Since \"generic type\" has a precise meaning in some languages, reword the docstring of `CompilerType` to avoid ambiguity.Differential Revision: https://reviews.llvm.org/D87633lldb/include/lldb/Symbol/CompilerType.hCommit 9c40495a35a2cac89dd72db54892d6bd7a2abf0d by uday[MLIR][NFC] Value print update for block argumentsEmit some more information when printing/dumping `Value`s of`BlockArgument` kind. This is purely to help for debugging purposes.Differential Revision: https://reviews.llvm.org/D87670mlir/lib/IR/AsmPrinter.cppCommit 291bfff5dbb70360730e91b4019f8080e4e3d7f5 by jano.veselylibclc: Add a __builtin to let SPIRV targets select between SW and HW FMAReviewer: jenatali jveselyDifferential Revision: https://reviews.llvm.org/D85910libclc/generic/lib/math/math.hlibclc/spirv64/lib/math/fma.cllibclc/spirv/lib/math/fma.clCommit 8ea7ef8eda93aa144c339275fc6d9db2615a0118 by mtrofin[ThinLTO] Relax thinlto_embed_bitcode.ll checkFixes fuscia test [1] - the thinlto annotations may not always be there.[1] http://lab.llvm.org:8011/builders/fuchsia-x86_64-linux/builds/11312clang/test/CodeGen/thinlto_embed_bitcode.llCommit 3045b3c3b5dbc4192b9a4057ae165f238b84ddf6 by craig.topper[X86] Add test case for non-power of 2 scatter. NFCllvm/test/CodeGen/X86/masked_gather_scatter.llCommit 41f4cd60d54d94e8dac4bbd8d9961dc8ad4a64fc by craig.topper[X86] Don't scalarize gather/scatters with non-power of 2 element counts. Widen instead.We can pad the mask with zeros in order to widen. We already dothis for power 2 types that are smaller than a legal type.llvm/lib/Target/X86/X86TargetTransformInfo.cppllvm/test/CodeGen/X86/masked_gather_scatter.llCommit fc82006331228b6b16ea47cd8093ac145739044b by asbirlea[MemorySSA] Set MustDominate to true for PhiTranslation.llvm/include/llvm/Analysis/MemorySSA.hllvm/test/Analysis/MemorySSA/phi-translation.llCommit 794467b916e87e8fb09380c67d0d433a29d93a2f by martin[llvm-rc] Allow omitting components from VERSIONINFO versionsMS rc.exe doesn't require specifying all 4 components.Differential Revision: https://reviews.llvm.org/D87570llvm/test/tools/llvm-rc/Inputs/tag-versioninfo.rcllvm/tools/llvm-rc/ResourceScriptParser.cppllvm/test/tools/llvm-rc/tag-versioninfo.testCommit 74d7356fc63bd1f42bbb20b793f21decf3c98a6e by martin[llvm-rc] Update a comment. NFC.Fix a typo and mention one missing step.llvm/tools/llvm-rc/ResourceFileWriter.cppCommit c913f6dce69513b430f705d5a1f4e745f5d0a27e by martin[llvm-rc] Lowercase the option definitions. NFC.This matches how such options are most commonly defined in other tools.This was pointed out in an earlier review a few months ago, thatthe llvm-rc td entries felt shouty.The INCLUDE option is renamed to includepath, to avoid clashing withthe tablegen include directive.llvm/tools/llvm-rc/llvm-rc.cppllvm/tools/llvm-rc/Opts.tdCommit 4171d5c30ad32282e6ca9027aeff01ef5ff2461b by Xing[obj2yaml] Add support for dumping the .debug_addr(v5) section.This patch adds support for dumping the .debug_addr(v5) section toobj2yaml.Reviewed By: jhendersonDifferential Revision: https://reviews.llvm.org/D87601llvm/tools/obj2yaml/obj2yaml.hllvm/include/llvm/DebugInfo/DWARF/DWARFDebugAddr.hllvm/test/tools/obj2yaml/ELF/DWARF/debug-addr.yamlllvm/tools/obj2yaml/dwarf2yaml.cppllvm/tools/obj2yaml/elf2yaml.cppCommit d3d76039002cd879f7aba37f88fc7312cfc95531 by asbirlea[MemorySSA] Report unoptimized as None, not MayAlias.llvm/unittests/Analysis/MemorySSATest.cppllvm/test/Analysis/MemorySSA/optimize-use.llllvm/test/Analysis/MemorySSA/phi-translation.llllvm/include/llvm/Analysis/MemorySSA.hllvm/test/Analysis/MemorySSA/pr43427.llCommit 94f7d3dba3c0a6ffd3e8a3f87ae849890578cd88 by mkazantsev[Test] Some more potential range check elimination opportunitiesllvm/test/Transforms/IndVarSimplify/predicated_ranges.llCommit af56be339f8c9660747794cc6755384154602535 by richard.barton[flang] Fix docs buildApply a local fix to an issue with recommonmark's AutoStructify extensionwhen used with certain versions of sphinx.See https://github.com/readthedocs/recommonmark/issues/93Reviewed By: hansDifferential Revision: https://reviews.llvm.org/D87714flang/docs/conf.pyCommit 6985135a43b62db2defc95367432069c9fddd094 by mkazantsev[Test] Add positive range checks tests in addition to negativellvm/test/Transforms/IndVarSimplify/predicated_ranges.llCommit b42fa0c040961b3704e826ddc969c0e98238c3ba by Vitaly BukaRevert \"[Asan] Fix false leak report\"Additional investigated confirmed that issue is not aboutAddrIsInside, but missing registers.This reverts commit 9d01612db48fa27d18c6320974b8d711572e5c67.compiler-rt/lib/asan/asan_allocator.cppcompiler-rt/test/asan/TestCases/redzone_noleak.cppCommit a8a85166d81f573af7ff325fdf93dd8bdfdeddbf by Vitaly BukaRevert \"[Asan] Accept __lsan_ignore_object for redzone pointer\"We still keep AddrIsInside.This reverts commit 1d70984fa220f966ddcecd7906c5f10368fe1b93.compiler-rt/lib/asan/asan_allocator.cppcompiler-rt/test/asan/TestCases/lsan_annotations.cppCommit 070b96962f517772fff4bf3c27cc825b46a136b5 by yvan.roux[ARM][MachineOutliner] Add calls handling.Handles calls inside outlined regions, by saving and restoring the linkregister.Differential Revision: https://reviews.llvm.org/D87136llvm/test/CodeGen/ARM/machine-outliner-default.mirllvm/lib/Target/ARM/ARMBaseInstrInfo.cppCommit d427df6369f1d229a9f498b4dc621433ada380d2 by platonov.aleksandr[clangd] Don't use zlib when it's unavailable.Without this patch `clangd` crashes at try to load compressed string table when `zlib` is not available.Example:- Build `clangd` with MinGW (`zlib` found)- Build index- Build `clangd` with Visual Studio compiler (`zlib` not found)- Try to load indexReviewed By: sammccall, adamczDifferential Revision: https://reviews.llvm.org/D87673clang-tools-extra/clangd/index/Serialization.cppCommit ef0b9f3307a1fa1c82b34098213ec854c1b5e608 by samuel.tebbs[ARM][LowOverheadLoops] Combine a VCMP and VPST into a VPTThis patch combines a VCMP followed by a VPST into a VPT, which has thesame semantics as the combination of the former two.llvm/test/CodeGen/Thumb2/LowOverheadLoops/vcmp-vpst-combination.llllvm/lib/Target/ARM/ARMLowOverheadLoops.cppCommit cb1ef0eaff8726a8c1fe4b8440f6734cbbe91630 by sjoerd.meijerFollow up rG635b87511ec3: forgot to add/commit the new test file. NFC.llvm/test/CodeGen/Thumb2/LowOverheadLoops/tail-pred-forced.llCommit 159abe09d25b19c24bf23ce50757987c0f25abe4 by AlokKumar.Sharma[DebugInfo][flang] DISubrange support for fortran assumed size arrayThis is needed to support assumed size array of fortran which can have missing upperBound/count, contrary to current DISubrange support.Example:subroutine sub (array1, array2)  integer :: array1 (*)  integer :: array2 (4:9, 10:*)  array1(7:8) = 9  array2(5, 10) = 10end subroutineNow the validation check is relaxed for fortran.Reviewed By: aprantlDifferential Revision: https://reviews.llvm.org/D87500llvm/include/llvm/BinaryFormat/Dwarf.hllvm/test/DebugInfo/X86/assumed_size_array.llllvm/lib/IR/Verifier.cppCommit ef4851742de5e64a1ba9de51e375ac503d2d7ecb by grimar[llvm-readobj][test] - Address a forgotten review comment for D86923.Seems I've forgot to address this bit and this looks like a reasonof a failture on mac (http://45.33.8.238/mac/20491/step_11.txt).llvm/test/tools/llvm-readobj/ELF/dyn-symbols-size-from-hash-table.testCommit 3a0a2a6347f5a79ebfba2cc2b763dd02001d9baa by kbobyrev[clangd] Implement hot index reloading for clangd-index-serverThis patch adds a mechanism to load new versions of index intoclangd-index-server using SwapIndex and FileStatus information about lastmodification time without downtime.Reviewed By: kadircetDifferential Revision: https://reviews.llvm.org/D87450clang-tools-extra/clangd/index/remote/server/Server.cppCommit 6040e2a6d97d9f9445715dfc468c3112f40e2588 by andrew.ng[Support] Add GlobPattern::isTrivialMatchAll()GlobPattern::isTrivialMatchAll() returns true for the GlobPattern \"*\"which will match all inputs.This can be used to avoid performing expensive preparation of the inputfor match() when the result of the match will always be true.Differential Revision: https://reviews.llvm.org/D87468llvm/unittests/Support/GlobPatternTest.cppllvm/include/llvm/Support/GlobPattern.hCommit 77152a6b7ac07ce65568d7c69305653e7cad4bb0 by andrew.ng[LLD][ELF] Optimize linker script filename glob pattern matching NFCOptimize the filename glob pattern matching inLinkerScript::computeInputSections() and LinkerScript::shouldKeep().Add InputFile::getNameForScript() which gets and if required caches theInputfile's name used for linker script matching. This avoids theoverhead of name creation that was in getFilename() in LinkerScript.cpp.Add InputSectionDescription::matchesFile() andSectionPattern::excludesFile() which perform the glob pattern matchingfor an InputFile and make use of a cache of the previous result. As bothcomputeInputSections() and shouldKeep() process sections in order andthe sections of the same InputFile are contiguous, these single entrycaches can significantly speed up performance for more complex globpatterns.These changes have been seen to reduce link time with --gc-sections byup to ~40% with linker scripts that contain KEEP filename glob patternssuch as \"*crtbegin*.o\".Differential Revision: https://reviews.llvm.org/D87469lld/ELF/ARMErrataFix.hlld/ELF/LinkerScript.hlld/ELF/AArch64ErrataFix.hlld/ELF/InputFiles.cpplld/ELF/Relocations.hlld/include/lld/Common/Strings.hlld/ELF/InputFiles.hlld/ELF/LinkerScript.cppCommit a8d02015fcb783d5fdf1e09edd1b9e152c5d19b7 by grimar[llvm-readobj][test] - Improve section-symbols.test`section-symbols.test` tests how we print section symbols indifferent situations.We might have 2 different cases:1) A named STT_SECTION symbol.2) An unnamed STT_SECTION symbol.Usually section symbols have no name and then `--symbols` uses theirsection names when prints them. If symbol has a name, then it is used.For `--relocations` we also want to have this logic probably,but currently we always ignore symbol names and always use section names.It is not consistent with GNU readelf and with our logic for `--symbols`.This patch refines testing to document the existent behavior and improvecoverage.Differential revision: https://reviews.llvm.org/D87612llvm/test/tools/llvm-readobj/ELF/section-symbols.testREST APIJenkins 2.249.2Help us localize this page"

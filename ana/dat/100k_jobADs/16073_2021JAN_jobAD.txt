"Test pending pull request and branch Pipeline/Pharo9.0 #710 test - osx-64 / Tests-osx-64 / testGetSmallHTMLTwice [Jenkins]Skip to contentJenkinslog inDashboardPharoPharo9.0#710Test ResultsTest ResultsMacOSX64.Zinc.TestsZnClientTestosx-64 / Tests-osx-64 / testGetSmallHTMLTwiceHistoryGit Build DataSee FingerprintsTest ResultOpen Blue OceanEmbeddable Build StatusPipeline StepsPrevious BuildNext BuildFailedosx-64 / Tests-osx-64 / MacOSX64.Zinc.Tests.ZnClientTest.testGetSmallHTMLTwice (from Zinc-Tests)Failing for the past 1 build (Since #710 )Took 11 sec.StacktraceTestTookTooMuchTimeProcess>>pvtSignal:list:[self schedule.	\"It is critical that the following has no suspension point so that	the test and the wait primitive are atomic. In addition, if the delay	is no longer being waited on while entering the way we know that it 	is expired because the delay has already fired.\"	beingWaitedOn 		ifTrue:[delaySemaphore wait]		ifFalse:[expired := true]] in DelayWaitTimeout>>waitFullBlockClosure(BlockClosure)>>ensure:DelayWaitTimeout>>waitSemaphore>>waitTimeoutMSecs:Socket>>waitForConnectionFor:ifTimedOut:Socket>>connectTo:port:waitForConnectionFor:ZdcSocketStream(ZdcAbstractSocketStream)>>socketConnectTo:port:ZdcSocketStream(ZdcSimpleSocketStream)>>connectTo:port:ZdcSocketStream class(ZdcSimpleSocketStream class)>>openConnectionToHost:port:timeout:ZnNetworkingUtils>>socketStreamToUrlDirectly:ZnNetworkingUtils>>socketStreamToUrl:ZnNetworkingUtils class>>socketStreamToUrl:ZnClient>>newConnectionTo:ZnClient>>getConnectionAndExecuteZnClient>>executeWithRedirectsRemaining:[ self executeWithRedirectsRemaining: self maxNumberOfRedirects ] in ZnClient>>executeWithRetriesRemaining:FullBlockClosure(BlockClosure)>>on:do:ZnClient>>executeWithRetriesRemaining:[ self executeWithRetriesRemaining: self numberOfRetries ] in [ 		[ self executeWithRetriesRemaining: self numberOfRetries ]			on: Error			do: self ifFailBlock ] in ZnClient>>executeWithTimeoutFullBlockClosure(BlockClosure)>>on:do:[ 		[ self executeWithRetriesRemaining: self numberOfRetries ]			on: Error			do: self ifFailBlock ] in ZnClient>>executeWithTimeout[ ^ block value ] in ZnClient>>withTimeoutDo:[ activeProcess			psValueAt: index			put: anObject.		aBlock value ] in ZnConnectionTimeout(DynamicVariable)>>value:during:FullBlockClosure(BlockClosure)>>ensure:ZnConnectionTimeout(DynamicVariable)>>value:during:ZnConnectionTimeout class(DynamicVariable class)>>value:during:ZnClient>>withTimeoutDo:ZnClient>>executeWithTimeout[ result := self executeWithTimeout ] in ZnClient>>execute[ ^ block value ] in ZnClient>>withProgressDo:[ activeProcess			psValueAt: index			put: anObject.		aBlock value ] in ZnSignalProgress(DynamicVariable)>>value:during:FullBlockClosure(BlockClosure)>>ensure:ZnSignalProgress(DynamicVariable)>>value:during:ZnSignalProgress class(DynamicVariable class)>>value:during:ZnClient>>withProgressDo:ZnClient>>executeZnClient>>getZnClientTest>>testGetSmallHTMLTwiceZnClientTest(TestCase)>>performTestREST APIJenkins 2.266"
